<includes>
    <include file="ViewtypesPictures.xml" />
    <include file="ViewtypesPrograms.xml" />
    <include file="ViewtypesPVR.xml" />
    
    <!-- Viewtypes -->
    <include file="Viewtypes_BigList.xml" />			<!-- (50) -->
    <include file="Viewtypes_MediumList.xml" />			<!-- (51) -->
    <include file="Viewtypes_LowList.xml" />			<!-- (52) -->
    <include file="Viewtypes_PanelList.xml" />			<!-- (53) -->
    <include file="Viewtypes_BannerList.xml" />			<!-- (54) -->
    <include file="Viewtypes_WideBanner.xml" />			<!-- (55) -->
    <include file="Viewtypes_LoveFilm.xml" />			<!-- (56) -->
    <include file="Viewtypes_Reel.xml" />				<!-- (57) -->
    <include file="Viewtypes_ClassicPoster.xml" />		<!-- (58) -->
    <include file="Viewtypes_ClassicInfo.xml" />		<!-- (59) -->
    <include file="Viewtypes_InfoPoster.xml" />			<!-- (60) -->
    <include file="Viewtypes_Wall.xml" />				<!-- (61) -->
    <include file="Viewtypes_Landscape.xml" />			<!-- (62) -->
    <include file="Viewtypes_InfoWall.xml" />			<!-- (63) -->
    <include file="Viewtypes_PosterPanel.xml" />		<!-- (64) -->
	<include file="Viewtypes_CoverInfo.xml" />			<!-- (65) -->
	<include file="Viewtypes_BigCover.xml" />			<!-- (66) -->
    <include file="Viewtypes_Thumbnail.xml" />			<!-- (500) -->
    <include file="Viewtypes_InfoList.xml" />			<!-- (501) -->
    <include file="Viewtypes_InfoStrip.xml" />			<!-- (502) -->
	<include file="Viewtypes_WallHorz.xml" />			<!-- (503) -->
	
    <include name="VideoViews">
        <include>Viewtype-BigList</include>				<!-- (50) -->
        <include>Viewtype-MediumList</include>			<!-- (51) -->
        <include>Viewtype-LowList</include>				<!-- (52) -->
        <include>Viewtype-PanelList</include>			<!-- (53) -->
        <include>Viewtype-BannerList</include>			<!-- (54) -->
        <include>Viewtype-WideBanner</include>			<!-- (55) -->
        <include>Viewtype-LoveFilm</include>			<!-- (56) -->
        <include>Viewtype-Reel</include>				<!-- (57) -->
        <include>Viewtype-ClassicPoster</include>		<!-- (58) -->
        <include>Viewtype-ClassicInfo</include>			<!-- (59) -->
        <include>Viewtype-InfoPoster</include>			<!-- (60) -->
        <include>Viewtype-Wall</include>				<!-- (61) -->
        <include>Viewtype-Landscape</include>			<!-- (62) -->
        <include>Viewtype-InfoWall</include>			<!-- (63) -->
        <include>Viewtype-PosterPanel</include>			<!-- (64) -->
        <include>Viewtype-Thumbnail</include>			<!-- (500) -->
        <include>Viewtype-InfoList</include>			<!-- (501) -->
        <include>Viewtype-InfoStrip</include>			<!-- (502) -->
        
        <include condition="Skin.HasSetting(NextAired.Enabled)">NextAiredInfo</include>
    </include>
    
    <include name="MusicViews">
        <include>Viewtype-MusicList</include>        	<!-- (50) -->
        <include>Viewtype-Music-MediumList</include>    <!-- (51) -->
        <include>Viewtype-Music-LowList</include>       <!-- (52) -->
        <include>Viewtype-Music-PanelList</include>     <!-- (53) -->
        <include>Viewtype-Music-Banner</include>        <!-- (54) -->
        <include>Viewtype-LoveFilm</include>			<!-- (56) -->
        <include>Viewtype-Music-Panel</include>        	<!-- (63) -->
        <include>Viewtype-Music-PanelCover</include>    <!-- (64) -->
        <include>Viewtype-Music-Coverinfo</include>     <!-- (65) -->
        <include>Viewtype-Music-BigCover</include>      <!-- (66) -->
        <include>Viewtype-Thumbnail</include>			<!-- (500) -->
        <include>Viewtype-InfoList</include>			<!-- (501) -->
        <include>Viewtype-Music-InfoStrip</include>		<!-- (502) -->
        <include>Viewtype-Music-WallHorz</include>		<!-- (503) -->
    </include>
    
    <include name="MusicFileViews">
        <include>Viewtype-MusicList</include>
        <include>Viewtype-InfoList</include>			<!-- (501) -->
    </include>

    <include name="PictureViews">
        <include>Viewtype-PictureList</include>
        <include>Viewtype-PictureListLargeThumb</include>
        <include>Viewtype-Thumbnail</include>
    </include>

    <include name="ProgramViews">
        <include>Viewtype-ProgramList</include>
        <include>Viewtype-Thumbnail</include>
        <include>Viewtype-AdvBanner</include>			<!-- (54) -->
        <include>Viewtype-LoveFilm</include>			<!-- (56) -->
        <include>Viewtype-Reel</include>				<!-- (57) -->
        <include>Viewtype-ClassicInfo</include>			<!-- (59) -->
        <include>Viewtype-Landscape</include>			<!-- (62) -->
        <include>Viewtype-InfoWall</include>			<!-- (63) -->
        
        <include>Viewtype-InfoList</include>			<!-- (501) -->
    </include>
    
    <include name="AddonViews">
        <include>Viewtype-Thumbnail</include>
        <include>Viewtype-AddonList</include>
    </include>
    
    <include name="VideoPlaylistViews">
        <include>Viewtype-BigList</include>
    </include>
    
    <include name="MusicPlaylistViews">
        <include>Viewtype-MusicList</include>
        <include>Viewtype-SongInfo</include>			<!-- (59) -->
        <include>Viewtype-MusicShortList</include>		<!-- (57) -->
    </include>
    
    <include name="PVRViews">
        <control type="group" id="50">
        	<include>Viewtype-TVChannelView</include> 
        	<include>Viewtype-RadioChannelView</include>
        	<include>Viewtype-EPGTimeline</include>
        	<include>Viewtype-TVGuideChannelView</include>
        	<include>Viewtype-TVGuideNowNext</include>
        	<include>Viewtype-TVRecordingsView</include>
        	<include>Viewtype-TVTimersView</include>
        	<include>Viewtype-TVSearch</include>
        </control>
    </include>
    
    
    <include name="MyNavViewOptions">
    	<!-- Info Poster : Show info -->
		<control type="radiobutton" id="102">
			<include>ViewOptions.Button</include>
			<label>42015</label>
			<texturefocus>dialogs/options/buttons/default-fo.png</texturefocus>
			<onclick>Skin.ToggleSetting(old.InfoPoster)</onclick>
			<selected>!Skin.HasSetting(old.InfoPoster)</selected>
			<textureradiofocus>buttons/radio/options-radio-button-fo.png</textureradiofocus>
			<textureradionofocus>buttons/radio/options-radio-button-nf.png</textureradionofocus>
			<radioposx>-19</radioposx>
			<visible>Control.IsVisible(60)</visible>
		</control>
		
		<!-- Wall : Show info -->
		<control type="radiobutton" id="103">
			<include>ViewOptions.Button</include>
			<label>42015</label>
			<texturefocus>dialogs/options/buttons/default-fo.png</texturefocus>
			<onclick>Skin.ToggleSetting(hide.posterwallinfo)</onclick>
			<selected>!Skin.HasSetting(hide.posterwallinfo)</selected>
			<textureradiofocus>buttons/radio/options-radio-button-fo.png</textureradiofocus>
			<textureradionofocus>buttons/radio/options-radio-button-nf.png</textureradionofocus>
			<radioposx>-19</radioposx>
			<visible>Control.IsVisible(61)</visible>
		</control>
		
		<!-- Low List : Episode thumb as fanart -->
		<control type="radiobutton" id="104">
			<include>ViewOptions.Button</include>
			<selected>Skin.HasSetting(lowlist.showepisodethumb)</selected>
			<onclick>Skin.ToggleSetting(lowlist.showepisodethumb)</onclick>
			<label>42402</label>
			<texturefocus>dialogs/options/buttons/default-fo.png</texturefocus>
			<textureradiofocus>buttons/radio/options-radio-button-fo.png</textureradiofocus>
			<textureradionofocus>buttons/radio/options-radio-button-nf.png</textureradionofocus>
			<radioposx>-19</radioposx>
			<visible>Control.IsVisible(52) + Container.Content(episodes)</visible>
		</control>
		
		<!-- Low List : Watched Overlay -->
		<control type="radiobutton" id="105">
			<include>ViewOptions.Button</include>
			<selected>Skin.HasSetting(lowlist.posteroverlay)</selected>
			<onclick>Skin.ToggleSetting(lowlist.posteroverlay)</onclick>
			<label>42452</label>
			<texturefocus>dialogs/options/buttons/default-fo.png</texturefocus>
			<textureradiofocus>buttons/radio/options-radio-button-fo.png</textureradiofocus>
			<textureradionofocus>buttons/radio/options-radio-button-nf.png</textureradionofocus>
			<radioposx>-19</radioposx>
			<visible>Control.IsVisible(52)</visible>
		</control>
		
		<!-- Medium List : Smaller cover -->
		<control type="radiobutton" id="106">
			<include>ViewOptions.Button</include>
			<selected>Skin.HasSetting(mediumlist.bigcover)</selected>
			<onclick>Skin.ToggleSetting(mediumlist.bigcover)</onclick>
			<label>42405</label>
			<texturefocus>dialogs/options/buttons/default-fo.png</texturefocus>
			<textureradiofocus>buttons/radio/options-radio-button-fo.png</textureradiofocus>
			<textureradionofocus>buttons/radio/options-radio-button-nf.png</textureradionofocus>
			<radioposx>-19</radioposx>
			<visible>Control.IsVisible(51) + [Container.Content(movies) | Container.Content(tvshows) | Container.Content(episodes) | Container.Content(seasons) | Container.Content(sets)]</visible>
		</control>
		
		<!-- Medium List : Watched Overlay -->
		<control type="radiobutton" id="107">
			<include>ViewOptions.Button</include>
			<selected>Skin.HasSetting(mediumlist.posteroverlay)</selected>
			<onclick>Skin.ToggleSetting(mediumlist.posteroverlay)</onclick>
			<label>42452</label>
			<texturefocus>dialogs/options/buttons/default-fo.png</texturefocus>
			<textureradiofocus>buttons/radio/options-radio-button-fo.png</textureradiofocus>
			<textureradionofocus>buttons/radio/options-radio-button-nf.png</textureradionofocus>
			<radioposx>-19</radioposx>
			<visible>Control.IsVisible(51)</visible>
		</control>
		
		<!-- Panel List : Show plot -->
		<control type="radiobutton" id="108">
			<include>ViewOptions.Button</include>
			<selected>Skin.HasSetting(panellist.showplot)</selected>
			<onclick>Skin.ToggleSetting(panellist.showplot)</onclick>
			<label>42018</label>
			<texturefocus>dialogs/options/buttons/default-fo.png</texturefocus>
			<textureradiofocus>buttons/radio/options-radio-button-fo.png</textureradiofocus>
			<textureradionofocus>buttons/radio/options-radio-button-nf.png</textureradionofocus>
			<radioposx>-19</radioposx>
			<visible>Control.IsVisible(53) + [Container.Content(movies) | Container.Content(tvshows) | Container.Content(episodes) | Container.Content(seasons) | Container.Content(sets)]</visible>
		</control>
		
		<!-- Poster Panel : Show plot -->
		<control type="radiobutton" id="109">
			<include>ViewOptions.Button</include>
			<selected>Skin.HasSetting(seasonpanel.showplot)</selected>
			<onclick>Skin.ToggleSetting(seasonpanel.showplot)</onclick>
			<label>42018</label>
			<texturefocus>dialogs/options/buttons/default-fo.png</texturefocus>
			<textureradiofocus>buttons/radio/options-radio-button-fo.png</textureradiofocus>
			<textureradionofocus>buttons/radio/options-radio-button-nf.png</textureradionofocus>
			<radioposx>-19</radioposx>
			<visible>Control.IsVisible(64)</visible>
		</control>
		
		<!-- Poster Panel : Show season number -->
		<control type="radiobutton" id="110">
			<include>ViewOptions.Button</include>
			<selected>Skin.HasSetting(seasonpanel.shownumber)</selected>
			<onclick>Skin.ToggleSetting(seasonpanel.shownumber)</onclick>
			<label>42404</label>
			<texturefocus>dialogs/options/buttons/default-fo.png</texturefocus>
			<textureradiofocus>buttons/radio/options-radio-button-fo.png</textureradiofocus>
			<textureradionofocus>buttons/radio/options-radio-button-nf.png</textureradionofocus>
			<radioposx>-19</radioposx>
			<visible>Control.IsVisible(64) + Container.Content(seasons)</visible>
		</control>
		
		<!-- Landscape: Focus zoom -->
		<control type="radiobutton" id="111">
			<include>ViewOptions.Button</include>
			<selected>Skin.HasSetting(landscapeview.zoom)</selected>
			<onclick>Skin.ToggleSetting(landscapeview.zoom)</onclick>
			<label>42403</label>
			<texturefocus>dialogs/options/buttons/default-fo.png</texturefocus>
			<textureradiofocus>buttons/radio/options-radio-button-fo.png</textureradiofocus>
			<textureradionofocus>buttons/radio/options-radio-button-nf.png</textureradionofocus>
			<radioposx>-19</radioposx>
			<visible>Control.IsVisible(62)</visible>
		</control>
		
		<!-- Wide Banner: Show plot -->
		<control type="radiobutton" id="112">
			<include>ViewOptions.Button</include>
			<selected>Skin.HasSetting(bannerlist.showplot)</selected>
			<onclick>Skin.ToggleSetting(bannerlist.showplot)</onclick>
			<label>42018</label>
			<texturefocus>dialogs/options/buttons/default-fo.png</texturefocus>
			<textureradiofocus>buttons/radio/options-radio-button-fo.png</textureradiofocus>
			<textureradionofocus>buttons/radio/options-radio-button-nf.png</textureradionofocus>
			<radioposx>-19</radioposx>
			<visible>Control.IsVisible(55) + !Container.Content(seasons) + !Container.Content(episodes)</visible>
		</control>
		
		<!-- Banner List : Watched Overlay -->
		<control type="radiobutton" id="113">
			<include>ViewOptions.Button</include>
			<selected>Skin.HasSetting(bannerlist.posteroverlay)</selected>
			<onclick>Skin.ToggleSetting(bannerlist.posteroverlay)</onclick>
			<label>42452</label>
			<texturefocus>dialogs/options/buttons/default-fo.png</texturefocus>
			<textureradiofocus>buttons/radio/options-radio-button-fo.png</textureradiofocus>
			<textureradionofocus>buttons/radio/options-radio-button-nf.png</textureradionofocus>
			<radioposx>-19</radioposx>
			<visible>Control.IsVisible(54)</visible>
		</control>
		
		<!-- Info Wall : Show Labels -->
		<control type="radiobutton" id="114">
			<include>ViewOptions.Button</include>
			<selected>!Skin.HasSetting(infowall.hidelabels)</selected>
			<onclick>Skin.ToggleSetting(infowall.hidelabels)</onclick>
			<label>42445</label>
			<texturefocus>dialogs/options/buttons/default-fo.png</texturefocus>
			<textureradiofocus>buttons/radio/options-radio-button-fo.png</textureradiofocus>
			<textureradionofocus>buttons/radio/options-radio-button-nf.png</textureradionofocus>
			<radioposx>-19</radioposx>
			<visible>Control.IsVisible(63) + ![Container.Content(albums) | Container.Content(artists) | Container.Content(songs)]</visible>
		</control>
		
		<!-- Thumbnails : Show Labels -->
		<control type="radiobutton" id="115">
			<include>ViewOptions.Button</include>
			<label>42445</label>
			<texturefocus border="2">dialogs/options/buttons/default-fo.png</texturefocus>
			<onclick>Skin.ToggleSetting(thumbnails.hidelabel)</onclick>
			<selected>!Skin.HasSetting(thumbnails.hidelabel)</selected>
			<visible>Control.IsVisible(500)</visible>
			<textureradioon>buttons/radio/options-radio-button-fo.png</textureradioon>
			<textureradiooff>buttons/radio/options-radio-button-nf.png</textureradiooff>
			<radioposx>-19</radioposx>
		</control>
		
		<!-- Cover info : Show info -->
		<control type="radiobutton" id="116">
			<include>ViewOptions.Button</include>
			<label>42015</label>
			<texturefocus border="2">dialogs/options/buttons/default-fo.png</texturefocus>
			<onclick>Skin.ToggleSetting(coverinfo.oldinfo)</onclick>
			<selected>!Skin.HasSetting(coverinfo.oldinfo)</selected>
			<visible>Control.IsVisible(65)</visible>
			<textureradioon>buttons/radio/options-radio-button-fo.png</textureradioon>
			<textureradiooff>buttons/radio/options-radio-button-nf.png</textureradiooff>
			<radioposx>-19</radioposx>
		</control>
		
		<!-- Medium List : Small Cover -->
		<control type="radiobutton" id="117">
			<include>ViewOptions.Button</include>
			<label>42405</label>
			<texturefocus border="2">dialogs/options/buttons/default-fo.png</texturefocus>
			<onclick>Skin.ToggleSetting(music.mediumlist.bigcover)</onclick>
			<selected>Skin.HasSetting(music.mediumlist.bigcover)</selected>
			<visible>Control.IsVisible(51) + [Container.Content(albums) | Container.Content(artists) | Container.Content(songs)]</visible>
			<textureradioon>buttons/radio/options-radio-button-fo.png</textureradioon>
			<textureradiooff>buttons/radio/options-radio-button-nf.png</textureradiooff>
			<radioposx>-19</radioposx>
		</control>
		
		<!-- Music Fanart : show cover -->
		<control type="radiobutton" id="118">
			<include>ViewOptions.Button</include>
			<label>42427</label>
			<texturefocus border="2">dialogs/options/buttons/default-fo.png</texturefocus>
			<onclick>Skin.ToggleSetting(musicfanart.showcover)</onclick>
			<selected>Skin.HasSetting(musicfanart.showcover)</selected>
			<visible>Control.IsVisible(63) + [Container.Content(albums) | Container.Content(artists) | Container.Content(songs)]</visible>
			<textureradioon>buttons/radio/options-radio-button-fo.png</textureradioon>
			<textureradiooff>buttons/radio/options-radio-button-nf.png</textureradiooff>
			<radioposx>-19</radioposx>
		</control>
		<!-- Music Fanart : show labels -->
		<control type="radiobutton" id="119">
			<include>ViewOptions.Button</include>
			<label>42445</label>
			<texturefocus border="2">dialogs/options/buttons/default-fo.png</texturefocus>
			<onclick>Skin.ToggleSetting(musicfanart.hidelabels)</onclick>
			<selected>!Skin.HasSetting(musicfanart.hidelabels)</selected>
			<visible>Control.IsVisible(63) + [Container.Content(albums) | Container.Content(artists) | Container.Content(songs)]</visible>
			<textureradioon>buttons/radio/options-radio-button-fo.png</textureradioon>
			<textureradiooff>buttons/radio/options-radio-button-nf.png</textureradiooff>
			<radioposx>-19</radioposx>
		</control>

		<!-- Music Panel List : show plot -->
		<control type="radiobutton" id="120">
			<include>ViewOptions.Button</include>
			<label>42015</label>
			<texturefocus border="2">dialogs/options/buttons/default-fo.png</texturefocus>
			<onclick>Skin.ToggleSetting(music.panellist.showplot)</onclick>
			<selected>Skin.HasSetting(music.panellist.showplot)</selected>
			<visible>Control.IsVisible(53) + [Container.Content(albums) | Container.Content(artists) | Container.Content(songs)]</visible>
			<textureradioon>buttons/radio/options-radio-button-fo.png</textureradioon>
			<textureradiooff>buttons/radio/options-radio-button-nf.png</textureradiooff>
			<radioposx>-19</radioposx>
		</control>
		
		<!-- Music Fanart : show labels -->
		<control type="radiobutton" id="121">
			<include>ViewOptions.Button</include>
			<label>42445</label>
			<texturefocus border="2">dialogs/options/buttons/default-fo.png</texturefocus>
			<onclick>Skin.ToggleSetting(infostrip.bigposters)</onclick>
			<selected>!Skin.HasSetting(infostrip.bigposters)</selected>
			<visible>Control.IsVisible(502) + [Container.Content(movies) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(sets)]</visible>
			<textureradioon>buttons/radio/options-radio-button-fo.png</textureradioon>
			<textureradiooff>buttons/radio/options-radio-button-nf.png</textureradiooff>
			<radioposx>-19</radioposx>
		</control>
		
		<!-------------------->
		<!-- DiscartOptions -->
		<!-------------------->
		
		<!-- Show Discart-->
		<control type="radiobutton" id="180">
			<include>ViewOptions.Button</include>
			<label>42401</label>
			<texturefocus>dialogs/options/buttons/default-fo.png</texturefocus>
			<onclick>Skin.ToggleSetting(showdiscart)</onclick>
			<selected>Skin.HasSetting(showdiscart)</selected>
			<textureradiofocus>buttons/radio/options-radio-button-fo.png</textureradiofocus>
			<textureradionofocus>buttons/radio/options-radio-button-nf.png</textureradionofocus>
			<radioposx>-19</radioposx>
			<visible>[Container.Content(movies) | Container.Content(sets)] + [Control.IsVisible(52) | Control.IsVisible(58) | Control.IsVisible(59) | Control.IsVisible(60)]</visible>
		</control>
		
		<!-- Rotate Disc Art -->
		<control type="radiobutton" id="181">
			<include>ViewOptions.Button</include>
			<selected>Skin.HasSetting(RotateDiscArt)</selected>
			<onclick>Skin.ToggleSetting(RotateDiscArt)</onclick>
			<label>42433</label>
			<texturefocus>dialogs/options/buttons/default-fo.png</texturefocus>
			<textureradiofocus>buttons/radio/options-radio-button-fo.png</textureradiofocus>
			<textureradionofocus>buttons/radio/options-radio-button-nf.png</textureradionofocus>
			<radioposx>-19</radioposx>
			<visible>Skin.HasSetting(showdiscart) + [Container.Content(movies) | Container.Content(sets)] + [Control.IsVisible(52) | Control.IsVisible(58) | Control.IsVisible(59) | Control.IsVisible(60)]</visible>
		</control>
		
		<!----------------->
		<!-- WrapOptions -->
		<!----------------->
		
		<!-- Landscape -->
		<control type="radiobutton" id="170">
			<include>ViewOptions.Button</include>
			<selected>Skin.HasSetting(viewtype.landscape.wrap)</selected>
			<onclick>Skin.ToggleSetting(viewtype.landscape.wrap)</onclick>
			<onclick>ReloadSkin()</onclick>
			<label>42400</label>
			<texturefocus>dialogs/options/buttons/default-fo.png</texturefocus>
			<textureradiofocus>buttons/radio/options-radio-button-fo.png</textureradiofocus>
			<textureradionofocus>buttons/radio/options-radio-button-nf.png</textureradionofocus>
			<radioposx>-19</radioposx>
			<visible>Control.IsVisible(62)</visible>
		</control>
		
		<!-- Classic Poster -->
		<control type="radiobutton" id="171">
			<include>ViewOptions.Button</include>
			<selected>Skin.HasSetting(viewtype.classicposter.wrap)</selected>
			<onclick>Skin.ToggleSetting(viewtype.classicposter.wrap)</onclick>
			<onclick>ReloadSkin()</onclick>
			<label>42400</label>
			<texturefocus>dialogs/options/buttons/default-fo.png</texturefocus>
			<textureradiofocus>buttons/radio/options-radio-button-fo.png</textureradiofocus>
			<textureradionofocus>buttons/radio/options-radio-button-nf.png</textureradionofocus>
			<radioposx>-19</radioposx>
			<visible>Control.IsVisible(58)</visible>
		</control>
		
		<!-- Classic Info -->
		<control type="radiobutton" id="172">
			<include>ViewOptions.Button</include>
			<selected>Skin.HasSetting(viewtype.classicposterinfo.wrap)</selected>
			<onclick>Skin.ToggleSetting(viewtype.classicposterinfo.wrap)</onclick>
			<onclick>ReloadSkin()</onclick>
			<label>42400</label>
			<texturefocus>dialogs/options/buttons/default-fo.png</texturefocus>
			<textureradiofocus>buttons/radio/options-radio-button-fo.png</textureradiofocus>
			<textureradionofocus>buttons/radio/options-radio-button-nf.png</textureradionofocus>
			<radioposx>-19</radioposx>
			<visible>Control.IsVisible(59)</visible>
		</control>
		
		<!-- Info Poster -->
		<control type="radiobutton" id="173">
			<include>ViewOptions.Button</include>
			<selected>Skin.HasSetting(viewtype.posterinfo.wrap)</selected>
			<onclick>Skin.ToggleSetting(viewtype.posterinfo.wrap)</onclick>
			<onclick>ReloadSkin()</onclick>
			<label>42400</label>
			<texturefocus>dialogs/options/buttons/default-fo.png</texturefocus>
			<textureradiofocus>buttons/radio/options-radio-button-fo.png</textureradiofocus>
			<textureradionofocus>buttons/radio/options-radio-button-nf.png</textureradionofocus>
			<radioposx>-19</radioposx>
			<visible>Control.IsVisible(60)</visible>
		</control>
		
		<!-- Low List -->
		<control type="radiobutton" id="174">
			<include>ViewOptions.Button</include>
			<selected>Skin.HasSetting(viewtype.lowlist.wrap)</selected>
			<onclick>Skin.ToggleSetting(viewtype.lowlist.wrap)</onclick>
			<onclick>ReloadSkin()</onclick>
			<label>42400</label>
			<texturefocus>dialogs/options/buttons/default-fo.png</texturefocus>
			<textureradiofocus>buttons/radio/options-radio-button-fo.png</textureradiofocus>
			<textureradionofocus>buttons/radio/options-radio-button-nf.png</textureradionofocus>
			<radioposx>-19</radioposx>
			<visible>Control.IsVisible(52)</visible>
		</control>
		
		<!------------------>
		<!-- PanelOptions -->
		<!------------------>
		
		<!-- Info List -->
		<control type="radiobutton" id="160">
			<selected>Skin.HasSetting(infolist.backpanel)</selected>
			<onclick>Skin.ToggleSetting(infolist.backpanel)</onclick>
			<label>42431</label>
			<include>ViewOptions.Button</include>
			<texturefocus>dialogs/options/buttons/default-fo.png</texturefocus>
			<textureradiofocus>buttons/radio/options-radio-button-fo.png</textureradiofocus>
			<textureradionofocus>buttons/radio/options-radio-button-nf.png</textureradionofocus>
			<radioposx>-19</radioposx>
			<visible>Control.IsVisible(501)</visible>
		</control>
		
		<!-- Panel List -->
		<control type="radiobutton" id="161">
			<selected>Skin.HasSetting(panellist.showpanel)</selected>
			<onclick>Skin.ToggleSetting(panellist.showpanel)</onclick>
			<label>42431</label>
			<include>ViewOptions.Button</include>
			<texturefocus>dialogs/options/buttons/default-fo.png</texturefocus>
			<textureradiofocus>buttons/radio/options-radio-button-fo.png</textureradiofocus>
			<textureradionofocus>buttons/radio/options-radio-button-nf.png</textureradionofocus>
			<radioposx>-19</radioposx>
			<visible>Control.IsVisible(53)</visible>
		</control>
		
		<!-- Info Wall -->
		<control type="radiobutton" id="162">
			<selected>Skin.HasSetting(infowall.backpanel)</selected>
			<onclick>Skin.ToggleSetting(infowall.backpanel)</onclick>
			<label>42431</label>
			<include>ViewOptions.Button</include>
			<texturefocus>dialogs/options/buttons/default-fo.png</texturefocus>
			<textureradiofocus>buttons/radio/options-radio-button-fo.png</textureradiofocus>
			<textureradionofocus>buttons/radio/options-radio-button-nf.png</textureradionofocus>
			<radioposx>-19</radioposx>
			<visible>Control.IsVisible(63)</visible>
		</control>
		
		<!-- Poster Panel -->
		<control type="radiobutton" id="163">
			<selected>Skin.HasSetting(posterpanel.backpanel)</selected>
			<onclick>Skin.ToggleSetting(posterpanel.backpanel)</onclick>
			<label>42431</label>
			<include>ViewOptions.Button</include>
			<texturefocus>dialogs/options/buttons/default-fo.png</texturefocus>
			<textureradiofocus>buttons/radio/options-radio-button-fo.png</textureradiofocus>
			<textureradionofocus>buttons/radio/options-radio-button-nf.png</textureradionofocus>
			<radioposx>-19</radioposx>
			<visible>Control.IsVisible(64)</visible>
		</control>
		
		<!-- Thumbnail -->
		<control type="radiobutton" id="164">
			<selected>Skin.HasSetting(thumbnails.backpanel)</selected>
			<onclick>Skin.ToggleSetting(thumbnails.backpanel)</onclick>
			<label>42431</label>
			<include>ViewOptions.Button</include>
			<texturefocus>dialogs/options/buttons/default-fo.png</texturefocus>
			<textureradiofocus>buttons/radio/options-radio-button-fo.png</textureradiofocus>
			<textureradionofocus>buttons/radio/options-radio-button-nf.png</textureradionofocus>
			<radioposx>-19</radioposx>
			<visible>Control.IsVisible(500)</visible>
		</control>
		
		<!-- Info Strip -->
		<control type="radiobutton" id="165">
			<selected>Skin.HasSetting(infostrip.backpanel)</selected>
			<onclick>Skin.ToggleSetting(infostrip.backpanel)</onclick>
			<label>42431</label>
			<include>ViewOptions.Button</include>
			<texturefocus>dialogs/options/buttons/default-fo.png</texturefocus>
			<textureradiofocus>buttons/radio/options-radio-button-fo.png</textureradiofocus>
			<textureradionofocus>buttons/radio/options-radio-button-nf.png</textureradionofocus>
			<radioposx>-19</radioposx>
			<visible>Control.IsVisible(502)</visible>
		</control>
		
		<!------------------->
		<!-- GlobalOptions -->
		<!------------------->
		
		<!-- Prefer Landscape Art -->
		<control type="radiobutton" id="150">
			<selected>Skin.HasSetting(PreferLandscapeArt)</selected>
			<onclick>Skin.ToggleSetting(PreferLandscapeArt)</onclick>
			<label>42416</label>
			<include>ViewOptions.Button</include>
			<texturefocus>dialogs/options/buttons/default-fo.png</texturefocus>
			<textureradiofocus>buttons/radio/options-radio-button-fo.png</textureradiofocus>
			<textureradionofocus>buttons/radio/options-radio-button-nf.png</textureradionofocus>
			<radioposx>-19</radioposx>
		</control>
		
		<!-- Extrafanart -->
		<control type="radiobutton" id="151">
			<include>ViewOptions.Button</include>
			<label>42406</label>
			<texturefocus>dialogs/options/buttons/default-fo.png</texturefocus>
			<onclick>Skin.ToggleSetting(movies.use.extrafanart)</onclick>
			<selected>Skin.HasSetting(movies.use.extrafanart)</selected>
			<textureradiofocus>buttons/radio/options-radio-button-fo.png</textureradiofocus>
			<textureradionofocus>buttons/radio/options-radio-button-nf.png</textureradionofocus>
			<radioposx>-19</radioposx>
			<visible>Container.Content(movies) | Container.Content(sets)</visible>
		</control>
		<control type="radiobutton" id="152">
			<include>ViewOptions.Button</include>
			<label>42406</label>
			<texturefocus>dialogs/options/buttons/default-fo.png</texturefocus>
			<onclick>Skin.ToggleSetting(tvshows.use.extrafanart)</onclick>
			<selected>Skin.HasSetting(tvshows.use.extrafanart)</selected>
			<textureradiofocus>buttons/radio/options-radio-button-fo.png</textureradiofocus>
			<textureradionofocus>buttons/radio/options-radio-button-nf.png</textureradionofocus>
			<radioposx>-19</radioposx>
			<visible>Container.Content(tvshows) | Container.Content(episodes) | Container.Content(seasons)</visible>
		</control>
		<control type="radiobutton" id="153">
			<include>ViewOptions.Button</include>
			<label>42406</label>
			<texturefocus border="2">dialogs/options/buttons/default-fo.png</texturefocus>
			<onclick>Skin.ToggleSetting(music.use.extrafanart)</onclick>
			<selected>Skin.HasSetting(music.use.extrafanart)</selected>
			<textureradioon>buttons/radio/options-radio-button-fo.png</textureradioon>
			<textureradiooff>buttons/radio/options-radio-button-nf.png</textureradiooff>
			<radioposx>-19</radioposx>
			<visible>Container.Content(music) | Container.Content(albums) | Container.Content(artists) | Container.Content(songs)</visible>
		</control>
		<!-- Animate Fanart -->
		<control type="radiobutton" id="154">
			<include>ViewOptions.Button</include>
			<label>42407</label>
			<texturefocus>dialogs/options/buttons/default-fo.png</texturefocus>
			<onclick>Skin.ToggleSetting(Fanart.Animate)</onclick>
			<selected>Skin.HasSetting(Fanart.Animate)</selected>
			<textureradiofocus>buttons/radio/options-radio-button-fo.png</textureradiofocus>
			<textureradionofocus>buttons/radio/options-radio-button-nf.png</textureradionofocus>
			<radioposx>-19</radioposx>
		</control>
    </include>
    
    
<!-- ========= -->  
<!-- Variables -->
<!-- ========= -->

    
    <!-- HD/SD flag -->
    <variable name="ListHDSDFlag">
    	<value condition="substring(ListItem.Path,videodb://1/7,left) | substring(ListItem.Path,videodb://movies/sets,left)">flags/other/set-default.png</value>
        <value condition="SubString(ListItem.FileNameAndPath,.3D.) | SubString(ListItem.FileNameAndPath,-3D.)">flags/other/3d-default.png</value>
        <value condition="IntegerGreaterThan(ListItem.VideoResolution,719)">flags/defs/hd.png</value>
        <value condition="!IsEmpty(ListItem.VideoResolution)">flags/defs/sd.png</value>
    </variable>
    
    <variable name="ListHDSDFlagSmall">
        <value condition="SubString(ListItem.FileNameAndPath,.3D.) | SubString(ListItem.FileNameAndPath,-3D.)">flags/other/3d-ilist.png</value>
        <value condition="IntegerGreaterThan(ListItem.VideoResolution,719)">flags/defs/hd-ilist.png</value>
        <value condition="!IsEmpty(ListItem.VideoResolution)">flags/defs/sd-ilist.png</value>
    </variable>
    
    <variable name="BannerListHDSDFlag">
        <value condition="SubString(ListItem.FileNameAndPath,.3D.) | SubString(ListItem.FileNameAndPath,-3D.)">flags/other/3d-black.png</value>
        <value condition="IntegerGreaterThan(ListItem.VideoResolution,719)">flags/defs/hd-black.png</value>
        <value condition="!IsEmpty(ListItem.VideoResolution)">flags/defs/sd-black.png</value>
    </variable>
    
    <variable name="LowListHDSDFlag">
        <value condition="SubString(ListItem.FileNameAndPath,.3D.) | SubString(ListItem.FileNameAndPath,-3D.)">flags/other/3d-white.png</value>
        <value condition="IntegerGreaterThan(ListItem.VideoResolution,719)">flags/defs/hd-white.png</value>
        <value condition="!IsEmpty(ListItem.VideoResolution)">flags/defs/sd-white.png</value>
    </variable>
    
    <variable name="LandscapeHDSD3DLabel">
        <value condition="SubString(ListItem.FileNameAndPath,.3D.) | SubString(ListItem.FileNameAndPath,-3D.)"> • 3D</value>
        <value condition="IntegerGreaterThan(ListItem.VideoResolution,719)"> • HD</value>
        <value condition="!IsEmpty(ListItem.VideoResolution)"> • SD</value>
    </variable>
    
    <variable name="LandscapeHDSD3DLabel0">
        <value condition="SubString(Container(54).ListItem(0).FileNameAndPath,.3D.) | SubString(Container(54).ListItem(0).FileNameAndPath,-3D.)"> • 3D</value>
        <value condition="IntegerGreaterThan(Container(54).ListItem(0).VideoResolution,719)"> • HD</value>
        <value condition="!IsEmpty(Container(54).ListItem(0).VideoResolution)"> • SD</value>
    </variable>
    
    <variable name="LandscapeHDSD3DLabel1">
        <value condition="SubString(Container(54).ListItem(1).FileNameAndPath,.3D.) | SubString(Container(54).ListItem(1).FileNameAndPath,-3D.)"> • 3D</value>
        <value condition="IntegerGreaterThan(Container(54).ListItem(1).VideoResolution,719)"> • HD</value>
        <value condition="!IsEmpty(Container(54).ListItem(1).VideoResolution)"> • SD</value>
    </variable>
    
    <variable name="LandscapeHDSD3DLabel2">
        <value condition="SubString(Container(54).ListItem(2).FileNameAndPath,.3D.) | SubString(Container(54).ListItem(2).FileNameAndPath,-3D.)"> • 3D</value>
        <value condition="IntegerGreaterThan(Container(54).ListItem(2).VideoResolution,719)"> • HD</value>
        <value condition="!IsEmpty(Container(54).ListItem(2).VideoResolution)"> • SD</value>
    </variable>
    
    <variable name="LandscapeHDSD3DLabel3">
        <value condition="SubString(Container(54).ListItem(3).FileNameAndPath,.3D.) | SubString(Container(54).ListItem(3).FileNameAndPath,-3D.)"> • 3D</value>
        <value condition="IntegerGreaterThan(Container(54).ListItem(3).VideoResolution,719)"> • HD</value>
        <value condition="!IsEmpty(Container(54).ListItem(3).VideoResolution)"> • SD</value>
    </variable>
    
    <variable name="LandscapeHDSD3DLabel-1">
        <value condition="SubString(Container(54).ListItem(-1).FileNameAndPath,.3D.) | SubString(Container(54).ListItem(-1).FileNameAndPath,-3D.)"> • 3D</value>
        <value condition="IntegerGreaterThan(Container(54).ListItem(-1).VideoResolution,719)"> • HD</value>
        <value condition="!IsEmpty(Container(54).ListItem(-1).VideoResolution)"> • SD</value>
    </variable>
    
    <!-- Overlays -->    
    <variable name="ExtendedOverlay">
        <value condition="Container.ListItem.IsResumable">$INFO[ListItem.Overlay,overlays/,/extended-p.png]</value>
        <value condition="!IntegerGreaterThan(ListItem.PlayCount,0)">$INFO[ListItem.Overlay,overlays/,/extended-w.png]</value>
    </variable>
    
    <variable name="ExtendedOverlay0">
        <value condition="Container.ListItem(0).IsResumable">$INFO[Container.ListItem(0).Overlay,overlays/,/extended-p.png]</value>
        <value condition="!IntegerGreaterThan(Container.ListItem(0).PlayCount,0)">$INFO[Container.ListItem(0).Overlay,overlays/,/extended-w.png]</value>
    </variable>
    
    <variable name="ExtendedOverlay1">
        <value condition="Container.ListItem(1).IsResumable">$INFO[Container.ListItem(1).Overlay,overlays/,/extended-p.png]</value>
        <value condition="!IntegerGreaterThan(Container.ListItem(1).PlayCount,0)">$INFO[Container.ListItem(1).Overlay,overlays/,/extended-w.png]</value>
    </variable>
    
    <variable name="ExtendedOverlay2">
        <value condition="Container.ListItem(2).IsResumable">$INFO[Container.ListItem(2).Overlay,overlays/,/extended-p.png]</value>
        <value condition="!IntegerGreaterThan(Container.ListItem(2).PlayCount,0) +!SubString(ListItem.Overlay,UnWatched)">$INFO[Container.ListItem(2).Overlay,overlays/,/extended-w.png]</value>
    </variable>
    
    <variable name="ExtendedOverlay3">
        <value condition="Container.ListItem(3).IsResumable">$INFO[Container.ListItem(3).Overlay,overlays/,/extended-p.png]</value>
        <value condition="!IntegerGreaterThan(Container.ListItem(3).PlayCount,0)">$INFO[Container.ListItem(3).Overlay,overlays/,/extended-w.png]</value>
    </variable>
    
    <variable name="ExtendedOverlay4">
        <value condition="Container.ListItem(4).IsResumable">$INFO[Container.ListItem(4).Overlay,overlays/,/extended-p.png]</value>
        <value condition="!IntegerGreaterThan(Container.ListItem(4).PlayCount,0)">$INFO[Container.ListItem(4).Overlay,overlays/,/extended-w.png]</value>
    </variable>
    
    <variable name="ExtendedOverlay-1">
        <value condition="Container.ListItem(-1).IsResumable">$INFO[Container.ListItem(-1).Overlay,overlays/,/extended-p.png]</value>
        <value condition="!IntegerGreaterThan(Container.ListItem(-1).PlayCount,0)">$INFO[Container.ListItem(-1).Overlay,overlays/,/extended-w.png]</value>
    </variable>
    
    <variable name="VideoInfoOverlay">
        <value condition="IntegerGreaterThan(ListItem.PercentPlayed,0) + !IntegerGreaterThan(ListItem.PercentPlayed,99)">$INFO[ListItem.Overlay,overlays/,/extended-p.png]</value>
        <value condition="!IntegerGreaterThan(ListItem.PlayCount,0)">$INFO[ListItem.Overlay,overlays/,/extended-w.png]</value>
    </variable>
    
    <variable name="ActorsVideoInfoOverlay">
        <value condition="!IsEmpty(ListItem.Property(isResumable))">$INFO[ListItem.Overlay,overlays/,/extended-p.png]</value>
        <value>$INFO[ListItem.Overlay,overlays/,/extended-w.png]</value>
    </variable>
    
    <variable name="AddonOverlay">
        <value condition="stringcompare(ListItem.Label2,$LOCALIZE[24098])">overlays/addons/broken.png</value>
        <value condition="stringcompare(ListItem.Label2,$LOCALIZE[305])">overlays/addons/enabled.png</value>
    </variable>

    <!-- Thumbnails -->
    <variable name="DefaultListPoster">
        <value condition="!IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value condition="!substring(Container.FolderPath,videodb://,left) + !IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value condition="Container.Content(Seasons) + !IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value>$INFO[ListItem.ActualIcon,views/fallbacks/,/small.png]</value>
    </variable>
    
    <variable name="DefaultListBanner">
        <value condition="!IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
        <value>$INFO[ListItem.ActualIcon,views/fallbacks/,/banner-small.png]</value>
    </variable>
    
    <variable name="DefaultListLandscape">
        <value condition="!IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value>$INFO[ListItem.ActualIcon,views/fallbacks/,/landscape-small.png]</value>
    </variable>
    
    <variable name="DefaultBanner">
        <value condition="!IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
        <value>$INFO[ListItem.ActualIcon,views/fallbacks/,/banner.png]</value>
    </variable>
     
    <variable name="ListFanart">
        <value condition="[Container.Content(Seasons) | Container.Content(Episodes)] + !IsEmpty(ListItem.Art(season.fanart))">$INFO[ListItem.Art(season.fanart)]</value>
        <value>$INFO[ListItem.Art(fanart)]</value>
    </variable>
    
    <variable name="InfoListPoster">
        <value condition="Container.Content(Episodes) + !IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value condition="!IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value condition="!substring(Container.FolderPath,videodb://,left) + !IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value condition="Container.Content(Seasons) + !IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value>$INFO[ListItem.ActualIcon,views/fallbacks/,/large.png]</value>
    </variable>
       
    <variable name="PosterViewPoster">
        <value condition="!IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value condition="[!substring(Container.FolderPath,videodb://,left) | Container.Content(actors)] + !IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value condition="Container.Content(Seasons) + !IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value>$INFO[ListItem.ActualIcon,views/fallbacks/,/large.png]</value>
    </variable>
    
    <variable name="PosterViewPoster-1">
        <value condition="!IsEmpty(Container(55).ListItem(-1).Art(poster))">$INFO[Container(55).ListItem(-1).Art(poster)]</value>
        <value condition="[!substring(Container.FolderPath,videodb://,left) | Container.Content(actors)] + !IsEmpty(Container(55).ListItem(-1).Art(thumb))">$INFO[Container(55).ListItem(-1).Art(thumb)]</value>
        <value condition="Container.Content(Seasons) + !IsEmpty(Container(55).ListItem(-1).Art(tvshow.poster))">$INFO[Container(55).ListItem(-1).Art(tvshow.poster)]</value>
        <value>$INFO[Container(55).ListItem(-1).ActualIcon,views/fallbacks/,/large.png]</value>
    </variable>
    
    <variable name="PosterViewPoster0">
        <value condition="!IsEmpty(Container(55).ListItem(0).Art(poster))">$INFO[Container(55).ListItem(0).Art(poster)]</value>
        <value condition="[!substring(Container.FolderPath,videodb://,left) | Container.Content(actors)] + !IsEmpty(Container(55).ListItem(0).Art(thumb))">$INFO[Container(55).ListItem(0).Art(thumb)]</value>
        <value condition="Container.Content(Seasons) + !IsEmpty(Container(55).ListItem(0).Art(tvshow.poster))">$INFO[Container(55).ListItem(0).Art(tvshow.poster)]</value>
        <value>$INFO[Container(55).ListItem(0).ActualIcon,views/fallbacks/,/large.png]</value>
    </variable>
    
    <variable name="PosterViewPoster1">
        <value condition="!IsEmpty(Container(55).ListItem(1).Art(poster))">$INFO[Container(55).ListItem(1).Art(poster)]</value>
        <value condition="[!substring(Container.FolderPath,videodb://,left) | Container.Content(actors)] + !IsEmpty(Container(55).ListItem(1).Art(thumb))">$INFO[Container(55).ListItem(1).Art(thumb)]</value>
        <value condition="Container.Content(Seasons) + !IsEmpty(Container(55).ListItem(1).Art(tvshow.poster))">$INFO[Container(55).ListItem(1).Art(tvshow.poster)]</value>
        <value>$INFO[Container(55).ListItem(1).ActualIcon,views/fallbacks/,/large.png]</value>
    </variable>
    
    <variable name="PosterViewPoster2">
        <value condition="!IsEmpty(Container(55).ListItem(2).Art(poster))">$INFO[Container(55).ListItem(2).Art(poster)]</value>
        <value condition="[!substring(Container.FolderPath,videodb://,left) | Container.Content(actors)] + !IsEmpty(Container(55).ListItem(2).Art(thumb))">$INFO[Container(55).ListItem(2).Art(thumb)]</value>
        <value condition="Container.Content(Seasons) + !IsEmpty(Container(55).ListItem(2).Art(tvshow.poster))">$INFO[Container(55).ListItem(2).Art(tvshow.poster)]</value>
        <value>$INFO[Container(55).ListItem(2).ActualIcon,views/fallbacks/,/large.png]</value>
    </variable>
    
    <variable name="PosterViewPoster3">
        <value condition="!IsEmpty(Container(55).ListItem(3).Art(poster))">$INFO[Container(55).ListItem(3).Art(poster)]</value>
        <value condition="[!substring(Container.FolderPath,videodb://,left) | Container.Content(actors)] + !IsEmpty(Container(55).ListItem(3).Art(thumb))">$INFO[Container(55).ListItem(3).Art(thumb)]</value>
        <value condition="Container.Content(Seasons) + !IsEmpty(Container(55).ListItem(3).Art(tvshow.poster))">$INFO[Container(55).ListItem(3).Art(tvshow.poster)]</value>
        <value>$INFO[Container(55).ListItem(3).ActualIcon,views/fallbacks/,/large.png]</value>
    </variable>
    
    <variable name="PosterViewPoster4">
        <value condition="!IsEmpty(Container(55).ListItem(4).Art(poster))">$INFO[Container(55).ListItem(4).Art(poster)]</value>
        <value condition="[!substring(Container.FolderPath,videodb://,left) | Container.Content(actors)] + !IsEmpty(Container(55).ListItem(4).Art(thumb))">$INFO[Container(55).ListItem(4).Art(thumb)]</value>
        <value condition="Container.Content(Seasons) + !IsEmpty(Container(55).ListItem(4).Art(tvshow.poster))">$INFO[Container(55).ListItem(4).Art(tvshow.poster)]</value>
        <value>$INFO[Container(55).ListItem(4).ActualIcon,views/fallbacks/,/large.png]</value>
    </variable>
    
    <variable name="PosterViewPoster5">
        <value condition="!IsEmpty(Container(55).ListItem(5).Art(poster))">$INFO[Container(55).ListItem(5).Art(poster)]</value>
        <value condition="[!substring(Container.FolderPath,videodb://,left) | Container.Content(actors)] + !IsEmpty(Container(55).ListItem(5).Art(thumb))">$INFO[Container(55).ListItem(5).Art(thumb)]</value>
        <value condition="Container.Content(Seasons) + !IsEmpty(Container(55).ListItem(5).Art(tvshow.poster))">$INFO[Container(55).ListItem(5).Art(tvshow.poster)]</value>
        <value>$INFO[Container(55).ListItem(5).ActualIcon,views/fallbacks/,/large.png]</value>
    </variable>
    
    <variable name="ExtendedViewThumb">
        <value condition="Container.Content(episodes)">$INFO[ListItem.Art(thumb)]</value>
        <value condition="!IsEmpty(ListItem.Art(landscape)) + [[Container.Content(TVShows) + [Skin.HasSetting(ExtendedUseLandscape) | Skin.HasSetting(ExtendedUseClearArt) | Skin.HasSetting(ExtendedUseClearLogo)]] | [Container.Content(Movies) + [Skin.HasSetting(ExtendedUseMovieLandscape) | Skin.HasSetting(ExtendedUseMovieClearArt) | Skin.HasSetting(ExtendedUseClearMovieLogo)]]]">$INFO[ListItem.Art(landscape)]</value>
        <value condition="!IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>    
        <value>$INFO[ListItem.ActualIcon,views/fallbacks/,/landscape.png]</value>
    </variable>
    
    <variable name="ExtendedViewThumb0">
        <value condition="Container.Content(episodes)">$INFO[Container(54).ListItem(0).Art(thumb)]</value>
        <value condition="!IsEmpty(Container(54).ListItem(0).Art(landscape)) + [[Container.Content(TVShows) + [Skin.HasSetting(ExtendedUseLandscape) | Skin.HasSetting(ExtendedUseClearArt) | Skin.HasSetting(ExtendedUseClearLogo)]] | [Container.Content(Movies) + [Skin.HasSetting(ExtendedUseMovieLandscape) | Skin.HasSetting(ExtendedUseMovieClearArt) | Skin.HasSetting(ExtendedUseClearMovieLogo)]]]">$INFO[Container(54).ListItem(0).Art(landscape)]</value>
        <value condition="!IsEmpty(Container(54).ListItem(0).Art(fanart))">$INFO[Container(54).ListItem(0).Art(fanart)]</value>    
        <value>$INFO[Container(54).ListItem(0).ActualIcon,views/fallbacks/,/landscape.png]</value>
    </variable>
    
    <variable name="ExtendedViewThumb1">
        <value condition="Container.Content(episodes)">$INFO[Container(54).ListItem(1).Art(thumb)]</value>
        <value condition="!IsEmpty(Container(54).ListItem(1).Art(landscape)) + [[Container.Content(TVShows) + [Skin.HasSetting(ExtendedUseLandscape) | Skin.HasSetting(ExtendedUseClearArt) | Skin.HasSetting(ExtendedUseClearLogo)]] | [Container.Content(Movies) + [Skin.HasSetting(ExtendedUseMovieLandscape) | Skin.HasSetting(ExtendedUseMovieClearArt) | Skin.HasSetting(ExtendedUseClearMovieLogo)]]]">$INFO[Container(54).ListItem(1).Art(landscape)]</value>
        <value condition="!IsEmpty(Container(54).ListItem(1).Art(fanart))">$INFO[Container(54).ListItem(1).Art(fanart)]</value>    
        <value>$INFO[Container(54).ListItem(1).ActualIcon,views/fallbacks/,/landscape.png]</value>
    </variable>
    
    <variable name="ExtendedViewThumb2">
        <value condition="Container.Content(episodes)">$INFO[Container(54).ListItem(2).Art(thumb)]</value>
        <value condition="!IsEmpty(Container(54).ListItem(2).Art(landscape)) + [[Container.Content(TVShows) + [Skin.HasSetting(ExtendedUseLandscape) | Skin.HasSetting(ExtendedUseClearArt) | Skin.HasSetting(ExtendedUseClearLogo)]] | [Container.Content(Movies) + [Skin.HasSetting(ExtendedUseMovieLandscape) | Skin.HasSetting(ExtendedUseMovieClearArt) | Skin.HasSetting(ExtendedUseClearMovieLogo)]]]">$INFO[Container(54).ListItem(2).Art(landscape)]</value>
        <value condition="!IsEmpty(Container(54).ListItem(2).Art(fanart))">$INFO[Container(54).ListItem(2).Art(fanart)]</value>    
        <value>$INFO[Container(54).ListItem(2).ActualIcon,views/fallbacks/,/landscape.png]</value>
    </variable>
    
    <variable name="ExtendedViewThumb3">
        <value condition="Container.Content(episodes)">$INFO[Container(54).ListItem(3).Art(thumb)]</value>
        <value condition="!IsEmpty(Container(54).ListItem(3).Art(landscape)) + [[Container.Content(TVShows) + [Skin.HasSetting(ExtendedUseLandscape) | Skin.HasSetting(ExtendedUseClearArt) | Skin.HasSetting(ExtendedUseClearLogo)]] | [Container.Content(Movies) + [Skin.HasSetting(ExtendedUseMovieLandscape) | Skin.HasSetting(ExtendedUseMovieClearArt) | Skin.HasSetting(ExtendedUseClearMovieLogo)]]]">$INFO[Container(54).ListItem(3).Art(landscape)]</value>
        <value condition="!IsEmpty(Container(54).ListItem(3).Art(fanart))">$INFO[Container(54).ListItem(3).Art(fanart)]</value>    
        <value>$INFO[Container(54).ListItem(3).ActualIcon,views/fallbacks/,/landscape.png]</value>
    </variable>
    
    <variable name="ExtendedViewThumb-1">
        <value condition="Container.Content(episodes)">$INFO[Container(54).ListItem(-1).Art(thumb)]</value>
        <value condition="!IsEmpty(Container(54).ListItem(-1).Art(landscape)) + [[Container.Content(TVShows) + [Skin.HasSetting(ExtendedUseLandscape) | Skin.HasSetting(ExtendedUseClearArt) | Skin.HasSetting(ExtendedUseClearLogo)]] | [Container.Content(Movies) + [Skin.HasSetting(ExtendedUseMovieLandscape) | Skin.HasSetting(ExtendedUseMovieClearArt) | Skin.HasSetting(ExtendedUseClearMovieLogo)]]]">$INFO[Container(54).ListItem(-1).Art(landscape)]</value>
        <value condition="!IsEmpty(Container(54).ListItem(-1).Art(fanart))">$INFO[Container(54).ListItem(-1).Art(fanart)]</value>    
        <value>$INFO[Container(54).ListItem(-1).ActualIcon,views/fallbacks/,/landscape.png]</value>
    </variable>
    
    <variable name="ExtendedViewLogo">
        <value condition="[!IsEmpty(ListItem.Art(clearlogo)) + [[Container.Content(TVShows) + Skin.HasSetting(ExtendedUseClearLogo)] | [Container.Content(Movies) + Skin.HasSetting(ExtendedUseClearMovieLogo)]]] | [IsEmpty(ListItem.Art(clearart)) + [[Container.Content(TVShows) + Skin.HasSetting(ExtendedUseClearArt)] | [Container.Content(Movies) + Skin.HasSetting(ExtendedUseClearMovieArt)]]]">$INFO[ListItem.Art(clearlogo)]</value>
        <value condition="!IsEmpty(ListItem.Art(clearart)) + [Skin.HasSetting(ExtendedUseClearArt) | Skin.HasSetting(ExtendedUseClearLogo)]">$INFO[ListItem.Art(clearart)]</value>
    </variable>
    
    <variable name="ExtendedViewLogo0">
        <value condition="[!IsEmpty(Container(54).ListItem(0).Art(clearlogo)) + [[Container.Content(TVShows) + Skin.HasSetting(ExtendedUseClearLogo)] | [Container.Content(Movies) + Skin.HasSetting(ExtendedUseClearMovieLogo)]]] | [IsEmpty(Container(54).ListItem(0).Art(clearart)) + [[Container.Content(TVShows) + Skin.HasSetting(ExtendedUseClearArt)] | [Container.Content(Movies) + Skin.HasSetting(ExtendedUseClearMovieArt)]]]">$INFO[Container(54).ListItem(0).Art(clearlogo)]</value>
        <value>$INFO[Container(54).ListItem(0).Art(clearart)]</value>
    </variable>
    
    <variable name="ExtendedViewLogo1">
        <value condition="[!IsEmpty(Container(54).ListItem(1).Art(clearlogo)) + [[Container.Content(TVShows) + Skin.HasSetting(ExtendedUseClearLogo)] | [Container.Content(Movies) + Skin.HasSetting(ExtendedUseClearMovieLogo)]]] | [IsEmpty(Container(54).ListItem(1).Art(clearart)) + [[Container.Content(TVShows) + Skin.HasSetting(ExtendedUseClearArt)] | [Container.Content(Movies) + Skin.HasSetting(ExtendedUseClearMovieArt)]]]">$INFO[Container(54).ListItem(1).Art(clearlogo)]</value>
        <value>$INFO[Container(54).ListItem(1).Art(clearart)]</value>
    </variable>
    
    <variable name="ExtendedViewLogo2">
        <value condition="[!IsEmpty(Container(54).ListItem(2).Art(clearlogo)) + [[Container.Content(TVShows) + Skin.HasSetting(ExtendedUseClearLogo)] | [Container.Content(Movies) + Skin.HasSetting(ExtendedUseClearMovieLogo)]]] | [IsEmpty(Container(54).ListItem(2).Art(clearart)) + [[Container.Content(TVShows) + Skin.HasSetting(ExtendedUseClearArt)] | [Container.Content(Movies) + Skin.HasSetting(ExtendedUseClearMovieArt)]]]">$INFO[Container(54).ListItem(2).Art(clearlogo)]</value>
        <value>$INFO[Container(54).ListItem(2).Art(clearart)]</value>
    </variable>
    
    <variable name="ExtendedViewLogo3">
        <value condition="[!IsEmpty(Container(54).ListItem(3).Art(clearlogo)) + [[Container.Content(TVShows) + Skin.HasSetting(ExtendedUseClearLogo)] | [Container.Content(Movies) + Skin.HasSetting(ExtendedUseClearMovieLogo)]]] | [IsEmpty(Container(54).ListItem(3).Art(clearart)) + [[Container.Content(TVShows) + Skin.HasSetting(ExtendedUseClearArt)] | [Container.Content(Movies) + Skin.HasSetting(ExtendedUseClearMovieArt)]]]">$INFO[Container(54).ListItem(3).Art(clearlogo)]</value>
        <value>$INFO[Container(54).ListItem(3).Art(clearart)]</value>
    </variable>
    
    <variable name="ExtendedViewLogo-1">
        <value condition="[!IsEmpty(Container(54).ListItem(-1).Art(clearlogo)) + [[Container.Content(TVShows) + Skin.HasSetting(ExtendedUseClearLogo)] | [Container.Content(Movies) + Skin.HasSetting(ExtendedUseClearMovieLogo)]]] | [IsEmpty(Container(54).ListItem(-1).Art(clearart)) + [[Container.Content(TVShows) + Skin.HasSetting(ExtendedUseClearArt)] | [Container.Content(Movies) + Skin.HasSetting(ExtendedUseClearMovieArt)]]]">$INFO[Container(54).ListItem(-1).Art(clearlogo)]</value>
        <value>$INFO[Container(54).ListItem(-1).Art(clearart)]</value>
    </variable>
    
    <variable name="WallPoster">
        <value condition="!IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value condition="[!substring(Container.FolderPath,videodb://,left) | Container.Content(actors)] + !IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value condition="Container.Content(Seasons) + !IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value>$INFO[ListItem.ActualIcon,views/fallbacks/,/medium.png]</value>
    </variable>

    <variable name="VideoInfoThumb">
		<value condition="Control.HasFocus(50) + !IsEmpty(Container(50).ListItem.Art(thumb))">$INFO[Container(50).ListItem.Art(thumb)]</value>
        <value condition="Container.Content(Episodes) + !IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(season.poster)]</value>
        <value condition="Container.Content(Episodes) + !IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value condition="!IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value condition="Container.Content(tvshows)">views/fallbacks/DefaultFolder.png/large.png</value>
        <value>views/fallbacks/DefaultVideo.png/large.png</value>
    </variable>

    <variable name="VideoInfoArt">
        <value condition="!IsEmpty(ListItem.Art(season.fanart)) + !Container.Content(episodes)">$INFO[ListItem.Art(season.fanart)]</value>
        <value condition="!IsEmpty(ListItem.Art(fanart)) + !Container.Content(episodes)">$INFO[ListItem.Art(fanart)]</value>
        <value condition="[Container.Content(episodes) | [IsEmpty(ListItem.Art(season.fanart)) + IsEmpty(ListItem.Art(fanart))]] + !IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value condition="Container.Content(tvshows)">views/fallbacks/DefaultFolder.png/landscape.png</value>
        <value>views/fallbacks/DefaultVideo.png/landscape.png</value>
    </variable>
    
    <variable name="BannerLandscape">
        <value condition="!IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value>$INFO[ListItem.ActualIcon,views/fallbacks/,/landscape.png]</value>
    </variable>
    
    <variable name="ThumbIcon">
        <value condition="!IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <!--<value condition="!IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>-->
        <value>$INFO[ListItem.ActualIcon,views/fallbacks/,/square-medium.png]</value>
    </variable>
    
    <variable name="SquareThumbSmall">
        <value condition="!IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value>$INFO[ListItem.ActualIcon,views/fallbacks/,/square-small.png]</value>
    </variable>
    
    <variable name="SquareThumbLarge">
        <value condition="!IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value>$INFO[ListItem.ActualIcon,views/fallbacks/,/square-large.png]</value>
    </variable>
    
    <variable name="SquareThumbLarge-1">
        <value condition="!IsEmpty(Container(55).ListItem(-1).Art(thumb))">$INFO[Container(55).ListItem(-1).Art(thumb)]</value>
        <value>$INFO[Container(55).ListItem(-1).ActualIcon,views/fallbacks/,/square-large.png]</value>
    </variable>
    
    <variable name="SquareThumbLarge0">
        <value condition="!IsEmpty(Container(55).ListItem(0).Art(thumb))">$INFO[Container(55).ListItem(0).Art(thumb)]</value>
        <value>$INFO[Container(55).ListItem(0).ActualIcon,views/fallbacks/,/square-large.png]</value>
    </variable>
    
    <variable name="SquareThumbLarge1">
        <value condition="!IsEmpty(Container(55).ListItem(1).Art(thumb))">$INFO[Container(55).ListItem(1).Art(thumb)]</value>
        <value>$INFO[Container(55).ListItem(1).ActualIcon,views/fallbacks/,/square-large.png]</value>
    </variable>
    
    <variable name="SquareThumbLarge2">
        <value condition="!IsEmpty(Container(55).ListItem(2).Art(thumb))">$INFO[Container(55).ListItem(2).Art(thumb)]</value>
        <value>$INFO[Container(55).ListItem(2).ActualIcon,views/fallbacks/,/square-large.png]</value>
    </variable>
    
    <variable name="SquareThumbLarge3">
        <value condition="!IsEmpty(Container(55).ListItem(3).Art(thumb))">$INFO[Container(55).ListItem(3).Art(thumb)]</value>
        <value>$INFO[Container(55).ListItem(3).ActualIcon,views/fallbacks/,/square-large.png]</value>
    </variable>
    
    <variable name="SquareThumbLarge4">
        <value condition="!IsEmpty(Container(55).ListItem(4).Art(thumb))">$INFO[Container(55).ListItem(4).Art(thumb)]</value>
        <value>$INFO[Container(55).ListItem(4).ActualIcon,views/fallbacks/,/square-large.png]</value>
    </variable>
    
    <variable name="SquareThumbLarge5">
        <value condition="!IsEmpty(Container(55).ListItem(5).Art(thumb))">$INFO[Container(55).ListItem(5).Art(thumb)]</value>
        <value>$INFO[Container(55).ListItem(5).ActualIcon,views/fallbacks/,/square-large.png]</value>
    </variable>
    
    <variable name="AlbumInfoThumb">
        <value condition="!IsEmpty(ListItem.Thumb)">$INFO[ListItem.Thumb]</value>
        <value condition="Container.Content(Artists)">views/fallbacks/DefaultArtist.png/square-large.png</value>
        <value>views/fallbacks/DefaultAlbumCover.png/square-large.png</value>
    </variable>
    
    <variable name="AddonInfoThumb">
        <value condition="!IsEmpty(ListItem.Thumb)">$INFO[ListItem.Thumb]</value>
        <value>views/fallbacks/DefaultAddon.png/square-large.png</value>
    </variable>
    
    <variable name="PvrListIcon">
        <value condition="ListItem.IsEncrypted + IsEmpty(ListItem.Thumb)">windows/pvr/encrypted.png</value>
        <value>$INFO[ListItem.Thumb]</value>
    </variable>
    
    <!-- Info -->
    <variable name="ListItem.Label">
        <value condition="ListItem.IsPlaying">[COLOR=SelectedGreen]$INFO[ListItem.Label][/COLOR]</value>
        <value>$INFO[ListItem.Label]</value>
    </variable>
    
    <variable name="ListItem.Title">
        <value condition="ListItem.IsPlaying">[COLOR=SelectedGreen]$INFO[ListItem.Title][/COLOR]</value>
        <value>$INFO[ListItem.Title]</value>
    </variable>
    
    <variable name="ListItem.ChannelNumber">
        <value condition="ListItem.IsPlaying">[COLOR=SelectedGreen]$INFO[ListItem.ChannelNumber][/COLOR]</value>
        <value>$INFO[ListItem.ChannelNumber]</value>
    </variable>
    
    <variable name="Colordiffuse.Color">
        <value condition="ListItem.IsPlaying">D4FFFFFF</value>
        <value>99FFFFFF</value>
    </variable>
    
    <variable name="Colordiffuse.Color.2">
        <value condition="ListItem.IsPlaying">D4FFFFFF</value>
        <value>77white</value>
    </variable>
    
    <variable name="Colordiffuse.Color.3">
        <value condition="ListItem.IsPlaying">FFFFFFFF</value>
        <value>7FFFFFFF</value>
    </variable>
    
    <variable name="CoverViewBottomInfo">
        <value condition="Container.Content(Artists)">$INFO[Container(55).ListItem.Artist]</value>
        <value condition="Container.Content(Songs) | Window.IsVisible(MusicPlaylist)">$INFO[Container(55).ListItem.Title]$INFO[ListItem.Duration, (,)]</value>
        <value>$INFO[Container(55).ListItem.Label]</value>
    </variable>
    
    <variable name="CoverViewBottomInfo2">
        <value condition="Container.Content(Albums)">$INFO[Container(55).ListItem.Year]$INFO[Container(55).ListItem.Genre, • ,]</value>
        <value condition="Container.Content(Songs) | Window.IsVisible(MusicPlaylist)">$INFO[Container(55).ListItem.Artist]</value>
        <value>$INFO[Container(55).ListItem.Label2]</value>
    </variable>
    
    <variable name="BannerListInfoGenreTotalSeasons">
        <value condition="Container.Content(Seasons)">$INFO[ListItem.Property(TotalEpisodes),, $LOCALIZE[20360]]</value>
        <value>$INFO[ListItem.Genre]</value>
    </variable>
    
    <variable name="AlbumInfoTracks">
        <value condition="!IntegerGreaterThan(ListItem.TrackNumber,9)">$INFO[ListItem.TrackNumber,0,. ]$INFO[ListItem.Label]$INFO[ListItem.Duration, (,)]</value>
        <value>$INFO[ListItem.TrackNumber,,. ]$INFO[ListItem.Label]$INFO[ListItem.Duration, (,)]</value>
    </variable>
    
    <variable name="ArtistInfoDiscography">
        <value condition="!IsEmpty(ListItem.Label2)">$INFO[ListItem.Label2,, ]$INFO[ListItem.Label]</value>
        <value>$INFO[ListItem.Label]</value>
    </variable>
    
    <variable name="MusicListLabel">
        <value condition="!IsEmpty(ListItem.Title)">$INFO[ListItem.Title]</value>
        <value>$INFO[ListItem.Label]</value>
    </variable>
    
    <variable name="MusicListStar">
        <value condition="ListItem.IsPlaying">views/thumb/other/star_pl.png</value>
        <value>views/thumb/other/star_nofo.png</value>
    </variable>
    
    <variable name="MusicListStarFo">
        <value condition="ListItem.IsPlaying">views/thumb/other/star_pl.png</value>
        <value>views/thumb/other/star_fo.png</value>
    </variable>
    
    <variable name="MusicListSongLabel">
        <value condition="[stringcompare(Container.FolderPath,musicdb://5/1/) | stringcompare(Container.FolderPath,musicdb://top100/songs/)]">$INFO[ListItem.Title]</value>
        <value condition="!IsEmpty(ListItem.Title) + !IntegerGreaterThan(ListItem.TrackNumber,9)">$INFO[ListItem.TrackNumber,0,. ]$INFO[ListItem.Title]</value>
        <value condition="!IsEmpty(ListItem.Title)">$INFO[ListItem.TrackNumber,,. ]$INFO[ListItem.Title]</value>
        <value>$INFO[ListItem.Label]</value>
    </variable>
    
    <variable name="MusicListSongLabel2">
        <value condition="stringcompare(Container.SortMethod,$LOCALIZE[567]) | stringcompare(Container.SortMethod,$LOCALIZE[576])">$INFO[ListItem.PlayCount, [,] ]$INFO[ListItem.Duration]</value>
        <value condition="stringcompare(Container.SortMethod,$LOCALIZE[562])">$INFO[ListItem.Year, [,] ]$INFO[ListItem.Duration]</value>
        <value condiiton="!IsEmpty(ListItem.Duration)">$INFO[ListItem.Duration, ,]</value>
    </variable>

    <variable name="MusicInfoListDescriptionHeader">
        <value condition="Container.Content(artists)">$LOCALIZE[21887]</value>
        <value>$LOCALIZE[183]</value>
    </variable>
    
    <variable name="MusicInfoListDescription">
        <value condition="Container.Content(artists)">$INFO[ListItem.Property(Artist_Description)]</value>
        <value>$INFO[ListItem.Property(Album_Description)]</value>
    </variable>
    
    <variable name="MusicInfoListInfo">
        <value condition="Container.Content(Artists)">$INFO[ListItem.Property(Artist_Genre)]</value>
        <value>$INFO[ListItem.Artist]</value>
    </variable>
    
    <variable name="MusicInfoListSubInfo">
        <value condition="Container.Content(Artists)">$INFO[ListItem.Property(Artist_Style)]</value>
        <value>$INFO[ListItem.Genre]</value>
    </variable>
    
    <variable name="MusicInfoListSongLabel">
        <value condition="!IsEmpty(ListItem.Title) + !IntegerGreaterThan(ListItem.TrackNumber,9)">$INFO[ListItem.TrackNumber,0,. ]$INFO[ListItem.Title]</value>
        <value condition="!IsEmpty(ListItem.Title)">$INFO[ListItem.TrackNumber,,. ]$INFO[ListItem.Title]</value>
        <value>$INFO[ListItem.Label]</value>
    </variable>
    
    <variable name="MusicInfoListSongLabel2">
        <value condition="stringcompare(Container.SortMethod,$LOCALIZE[567]) | stringcompare(Container.SortMethod,$LOCALIZE[576])">$INFO[ListItem.PlayCount, [,] ]$INFO[ListItem.Duration]</value>
        <value condition="stringcompare(Container.SortMethod,$LOCALIZE[562])">$INFO[ListItem.Year, [,] ]$INFO[ListItem.Duration]</value>
        <value condition="stringcompare(Container.SortMethod,$LOCALIZE[563])">$INFO[ListItem.Rating, [,★] ]$INFO[ListItem.Duration]</value>
        <value condiiton="!IsEmpty(ListItem.Duration)">$INFO[ListItem.Duration, ,]</value>
    </variable>
    
    <variable name="MusicPanelInfo">
        <value condition="Container.Content(Artists)">$INFO[ListItem.Artist]</value>
        <value>$INFO[ListItem.Album]</value>
    </variable>
    
    <variable name="MusicPanelSubInfo">
        <value condition="Container.Content(Artists)">$INFO[ListItem.Property(Artist_Genre)]</value>
        <value>$INFO[ListItem.Year]$INFO[ListItem.Genre, • ,]</value>
    </variable>
    
    <variable name="MusicThumbnailInfo">
        <value condition="Container.Content(Artists)">$INFO[ListItem.Artist]</value>
        <value>$INFO[ListItem.Artist]</value>
    </variable>
    
    <variable name="VideoPanelThumbInfo">
        <value condition="Container.Content(movies)">$INFO[ListItem.Year]$INFO[ListItem.Duration, • , $LOCALIZE[12391]]$INFO[ListItem.Rating, • ★ ,]$VAR[LandscapeHDSD3DLabel]</value>
        <value>$INFO[ListItem.Property(UnWatchedEpisodes),$LOCALIZE[41311],]</value>
    </variable>
    
    <variable name="ThumbnailViewDetailInfo">
        <value condition="Container.Content(episodes) + !IsEmpty(ListItem.Overlay)">$INFO[ListItem.Premiered]$INFO[ListItem.Rating, ★ ,]      </value>
        <value condition="Container.Content(episodes) + IsEmpty(ListItem.Overlay)">$INFO[ListItem.Premiered]$INFO[ListItem.Rating, ★ ,]</value>
        <value condition="!Container.Content(episodes) + !IsEmpty(ListItem.Overlay)">$INFO[ListItem.Label2]$INFO[ListItem.Rating, ★ ,]      </value>
        <value>$INFO[ListItem.Label2]$INFO[ListItem.Rating, ★ ,]</value>
    </variable>
    
    <variable name="InfoListInfo">
        <value condition="Container.Content(Movies)">$INFO[Container(52).ListItem.Duration,, $LOCALIZE[12391]]</value>
        <value>$INFO[Container(52).ListItem.Studio]</value>
    </variable>
    
    <variable name="InfoListSubInfo">
        <value condition="Container.Content(Episodes)">$INFO[Container(52).ListItem.Date,$LOCALIZE[41805]: ,]</value>
        <value>$INFO[Container(52).ListItem.Genre]</value>
    </variable>
    
    <variable name="CastLabel">
        <value condition="Container.Content(musicvideos)">$LOCALIZE[133]</value>
        <value>$LOCALIZE[41316]</value>
    </variable>
    
    <variable name="VideoInfoTitleLabel">
        <value condition="!IsEmpty(ListItem.TagLine)">$INFO[ListItem.TagLine]</value>
        <value>$INFO[ListItem.Title]</value>
    </variable>
    
    <!-- Other -->
    <variable name="TVTimerRadioButtonTexture">
        <value condition="!StringCompare(ListItem.Comment,$LOCALIZE[305]) + !IsEmpty(ListItem.ChannelName)">buttons/radio/radio-button-nf.png</value>
        <value condition="StringCompare(ListItem.Comment,$LOCALIZE[305]) + !IsEmpty(ListItem.ChannelName)">buttons/radio/radio-button-fo.png</value>
    </variable>
    
    <variable name="TVNumItemsLabel">
        <value condition="IntegerGreaterThan(Container.NumItems,0) + !IntegerGreaterThan(Container.NumItems,1)">$INFO[Container.NumItems,, $LOCALIZE[41822]]</value>
        <value condition="IntegerGreaterThan(Container.NumItems,0)">$INFO[Container.NumItems,, $LOCALIZE[41817]]</value>
    </variable>
    
    <!-- VIEWTYPES -->
    <variable name="UnderTitle-Recent">
		<value condition="stringcompare(Container.FolderPath,library://video/recentlyaddedepisodes.xml/) | stringcompare(Container.FolderPath,videodb://5/) | stringcompare(Container.FolderPath,videodb://recentlyaddedepisodes/)">$INFO[ListItem.TVShowTitle, • ,]$INFO[ListItem.Season, • ,]$INFO[ListItem.Episode,x,]</value>
    </variable>
	<variable name="UnderTitle">
		<value condition="Container.Content(seasons) | Container.Content(tvshows)">$INFO[ListItem.Property(TotalEpisodes),, $LOCALIZE[20360]]$INFO[ListItem.Property(UnWatchedEpisodes),  •  , $LOCALIZE[16101]]</value>
		<value condition="Container.Content(episodes)">$INFO[ListItem.Premiered,,]$INFO[ListItem.Duration,  •  , $LOCALIZE[12391]]</value>
		<value condition="Container.Content(movies) + [substring(ListItem.Path,videodb://1/7,left) | substring(ListItem.Path,videodb://movies/sets,left)]">$LOCALIZE[20457]</value>
		<value condition="Container.Content(movies)">$INFO[ListItem.Duration,, $LOCALIZE[12391]]$INFO[ListItem.Genre,  •  ,]</value>
	</variable>
	
	<variable name="MainTitle">
		<value condition="Container.Content(episodes) | Container.Content(tvshows)">$INFO[ListItem.Title]</value>
		<value condition="Container.Content(movies)">$INFO[ListItem.Label]</value>
		<value condition="Container.Content(seasons) + !IsEmpty(ListItem.Season)">$LOCALIZE[20373]</value>
        <value condition="Container.Content(seasons) + IsEmpty(ListItem.Season) + SubString(ListItem.Label,$LOCALIZE[20366])">$LOCALIZE[20366]</value>
        <value condition="Container.Content(seasons) + IsEmpty(ListItem.Season) + SubString(ListItem.Label,$LOCALIZE[20381])">$LOCALIZE[20381]</value>
        <value>$INFO[ListItem.Label]</value>
	</variable>
	
	<variable name="MusicPlotBox">
		<value condition="Container.Content(addons) + !IsEmpty(ListItem.Property(Addon.Description))">$INFO[ListItem.Property(Addon.Description)]</value>
		<value condition="Container.Content(songs)">$INFO[ListItem.Genre,[CR][B]$LOCALIZE[515]:[/B]  ,]$INFO[ListItem.Year,[CR][B]$LOCALIZE[562]:[/B]  ,]$INFO[ListItem.Duration,[CR][B]$LOCALIZE[180]:[/B]  ,]</value>
		<value condition="Container.Content(albums) + !IsEmpty(ListItem.Property(Album_Description))">$INFO[ListItem.Property(Album_Description),[B]$LOCALIZE[183][/B][CR],]$INFO[Window(home).Property(Album.Song.1.Title),[CR][CR][B]$LOCALIZE[182][/B][CR][B]1. [/B],]  $INFO[Window(home).Property(Album.Song.2.Title), [B]2. [/B],]  $INFO[Window(home).Property(Album.Song.3.Title), [B]3. [/B],]  $INFO[Window(home).Property(Album.Song.4.Title), [B]4. [/B],]$INFO[Window(home).Property(Album.Song.5.Title), [B]5. [/B],]  $INFO[Window(home).Property(Album.Song.6.Title), [B]6. [/B],]  $INFO[Window(home).Property(Album.Song.7.Title), [B]7. [/B],]  $INFO[Window(home).Property(Album.Song.8.Title), [B]8. [/B],]$INFO[Window(home).Property(Album.Song.9.Title), [B]9. [/B],]  $INFO[Window(home).Property(Album.Song.10.Title), [B]10. [/B],]  $INFO[Window(home).Property(Album.Song.11.Title), [B]11. [/B],]  $INFO[Window(home).Property(Album.Song.12.Title), [B]12. [/B],]$INFO[Window(home).Property(Album.Song.13.Title), [B]13. [/B],]  $INFO[Window(home).Property(Album.Song.14.Title), [B]14. [/B],]  $INFO[Window(home).Property(Album.Song.15.Title), [B]15. [/B],]  $INFO[Window(home).Property(Album.Song.16.Title), [B]16. [/B],]</value>
		<value condition="Container.Content(albums) + IsEmpty(ListItem.Property(Album_Description))">$INFO[Window(home).Property(Album.Song.1.Title),[B]$LOCALIZE[182][/B][CR][B]1. [/B],]  $INFO[Window(home).Property(Album.Song.2.Title), [B]2. [/B],]  $INFO[Window(home).Property(Album.Song.3.Title), [B]3. [/B],]  $INFO[Window(home).Property(Album.Song.4.Title), [B]4. [/B],]$INFO[Window(home).Property(Album.Song.5.Title), [B]5. [/B],]  $INFO[Window(home).Property(Album.Song.6.Title), [B]6. [/B],]  $INFO[Window(home).Property(Album.Song.7.Title), [B]7. [/B],]  $INFO[Window(home).Property(Album.Song.8.Title), [B]8. [/B],]$INFO[Window(home).Property(Album.Song.9.Title), [B]9. [/B],]  $INFO[Window(home).Property(Album.Song.10.Title), [B]10. [/B],]  $INFO[Window(home).Property(Album.Song.11.Title), [B]11. [/B],]  $INFO[Window(home).Property(Album.Song.12.Title), [B]12. [/B],]$INFO[Window(home).Property(Album.Song.13.Title), [B]13. [/B],]  $INFO[Window(home).Property(Album.Song.14.Title), [B]14. [/B],]  $INFO[Window(home).Property(Album.Song.15.Title), [B]15. [/B],]  $INFO[Window(home).Property(Album.Song.16.Title), [B]16. [/B],]</value>
		<value condition="Container.Content(artists) + !IsEmpty(ListItem.Property(Artist_Description))">$INFO[ListItem.Property(Artist_Description),[B]$LOCALIZE[21887][/B][CR],]$INFO[Window(home).Property(Artist.Album.1.Title),[CR][CR][B]$LOCALIZE[21888][/B][CR],]$INFO[Window(home).Property(Artist.Album.2.Title),[CR],]$INFO[Window(home).Property(Artist.Album.3.Title),[CR],]$INFO[Window(home).Property(Artist.Album.4.Title),[CR],]$INFO[Window(home).Property(Artist.Album.5.Title),[CR],]$INFO[Window(home).Property(Artist.Album.6.Title),[CR],]$INFO[Window(home).Property(Artist.Album.7.Title),[CR],]$INFO[Window(home).Property(Artist.Album.8.Title),[CR],]$INFO[Window(home).Property(Artist.Album.9.Title),[CR],]$INFO[Window(home).Property(Artist.Album.10.Title),[CR],]</value>
		<value condition="Container.Content(artists) + IsEmpty(ListItem.Property(Artist_Description))">$INFO[Window(home).Property(Artist.Album.1.Title),[B]$LOCALIZE[21888][/B][CR],]$INFO[Window(home).Property(Artist.Album.2.Title),[CR],]$INFO[Window(home).Property(Artist.Album.3.Title),[CR],]$INFO[Window(home).Property(Artist.Album.4.Title),[CR],]$INFO[Window(home).Property(Artist.Album.5.Title),[CR],]$INFO[Window(home).Property(Artist.Album.6.Title),[CR],]$INFO[Window(home).Property(Artist.Album.7.Title),[CR],]$INFO[Window(home).Property(Artist.Album.8.Title),[CR],]$INFO[Window(home).Property(Artist.Album.9.Title),[CR],]$INFO[Window(home).Property(Artist.Album.10.Title),[CR],]</value>
		<value>$INFO[ListItem.Plot]</value>
	</variable>
	
	<variable name="ExtendedInfo.Plot">
		<value condition="substring(ListItem.Path,videodb://1/7,left) | substring(ListItem.Path,videodb://movies/sets,left)">$INFO[Window(home).Property(Set.Movies.ExtendedPlot)]</value>
		<value condition="!IsEmpty(ListItem.Plot)">$INFO[ListItem.Plot]</value>
		<value condition="!IsEmpty(ListItem.Property(Addon.Description))">$INFO[ListItem.Property(Addon.Description)]</value>
		<value condition="!IsEmpty(ListItem.Property(Addon.Summary))">$INFO[ListItem.Property(Addon.Summary)]</value>
		<value>$VAR[MusicPlotBox]</value>
	</variable>
	
	<variable name="EpisodeNumber">
    	<value condition="Container.Content(episodes) + IntegerGreaterThan(ListItem.Episode,9) + !SubString(ListItem.Episode,S)">$INFO[ListItem.Episode]</value>
    	<value condition="Container.Content(episodes) + !IntegerGreaterThan(ListItem.Episode,9) + !SubString(ListItem.Episode,S)">$INFO[ListItem.Episode,0,]</value>
    	<value condition="Container.Content(episodes) + SubString(ListItem.Episode,S) + [StringCompare(ListItem.Episode,S1) | StringCompare(ListItem.Episode,S2) | StringCompare(ListItem.Episode,S3) | StringCompare(ListItem.Episode,S4) | StringCompare(ListItem.Episode,S5) | StringCompare(ListItem.Episode,S6) | StringCompare(ListItem.Episode,S7) | StringCompare(ListItem.Episode,S8) | StringCompare(ListItem.Episode,S9)]">$INFO[ListItem.Episode]</value>
    	<value condition="Container.Content(episodes) + SubString(ListItem.Episode,S) + ![StringCompare(ListItem.Episode,S1) | StringCompare(ListItem.Episode,S2) | StringCompare(ListItem.Episode,S3) | StringCompare(ListItem.Episode,S4) | StringCompare(ListItem.Episode,S5) | StringCompare(ListItem.Episode,S6) | StringCompare(ListItem.Episode,S7) | StringCompare(ListItem.Episode,S8) | StringCompare(ListItem.Episode,S9)]">$INFO[ListItem.Episode]</value>
    	<value condition="Container.Content(seasons) + IntegerGreaterThan(ListItem.Season,9) + !IsEmpty(ListItem.Season)">$INFO[ListItem.Season]</value>
    	<value condition="Container.Content(seasons) + !IntegerGreaterThan(ListItem.Season,9) + !IsEmpty(ListItem.Season)">$INFO[ListItem.Season,0,]</value>
    	<value condition="Container.Content(seasons) + IsEmpty(ListItem.Season) + SubString(ListItem.Label,$LOCALIZE[20366])">00</value>
        <value condition="Container.Content(seasons) + IsEmpty(ListItem.Season) + SubString(ListItem.Label,$LOCALIZE[20381])">00</value>
    </variable>
	
	<variable name="PosterViewPosterAlt">
        <value condition="!IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value condition="!substring(Container.FolderPath,videodb://,left) + !IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value condition="[Container.Content(Seasons) | Container.Content(Episodes)] + !IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value condition="Container.Content(Actors)">$INFO[ListItem.Icon]</value>
        <value condition="Container.Content(Genres)">$INFO[ListItem.Label,special://skin/extras/moviegenres/,.jpg]</value>
        <value>$INFO[ListItem.ActualIcon,views/fallbacks/,/large.png]</value>
    </variable>
    
    <variable name="PlexBanner">
        <value condition="!IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
        <value condition="!IsEmpty(ListItem.Art(tvshow.banner))">$INFO[ListItem.Art(tvshow.banner)]</value>
        <value condition="IsEmpty(ListItem.Art(banner)) + !IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value>$INFO[ListItem.ActualIcon,views/fallbacks/,/banner.png]</value>
    </variable>
    
    <variable name="ListInfoLandscapeVar">
        <value condition="Container.Content(episodes)">$INFO[ListItem.Thumb]</value>
        <value condition="!IsEmpty(ListItem.Art(landscape)) + Skin.HasSetting(PreferLandscapeArt)">$INFO[ListItem.Art(landscape)]</value>
        <value condition="!IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value condition="!IsEmpty(ListItem.Thumb)">$INFO[ListItem.Thumb]</value>
        <value condition="substring(Container.FolderPath,plugin://,left)">views/fallbacks/DefaultFolder.png/landscape.png</value>
        <value condition="IsEmpty(ListItem.Thumb) + !substring(Container.FolderPath,plugin://,left)">$INFO[ListItem.ActualIcon,views/fallbacks/,/landscape.png]</value>
        <value>views/fallbacks/DefaultFolder.png/landscape.png</value>
    </variable>

    <variable name="ListInfoPosterVar">
        <value condition="Container.Content(episodes) + !IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value condition="!IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value condition="IsEmpty(ListItem.Art(poster)) + !IsEmpty(ListItem.Thumb) + !Container.Content(movies) + !Container.Content(tvshows) + !Container.Content(episodes) + !Container.Content(Seasons)">$INFO[ListItem.Thumb]</value>
		<value>$INFO[ListItem.ActualIcon,views/fallbacks/,/large.png]</value>
    </variable>
    
    <variable name="MusicTracklistVar">
        <value condition="!IsEmpty(Window(home).Property(Album.Song.13.Title)) + System.AlarmLessOrEqual(cycletracklist,3) + !System.AlarmLessOrEqual(cycletracklist,0)">$INFO[Window(home).Property(Album.Song.13.Title), [B]13. [/B],][CR]$INFO[Window(home).Property(Album.Song.14.Title), [B]14. [/B],][CR]$INFO[Window(home).Property(Album.Song.15.Title), [B]15. [/B],][CR]$INFO[Window(home).Property(Album.Song.16.Title), [B]16. [/B],]</value>
        <value condition="!IsEmpty(Window(home).Property(Album.Song.9.Title)) + System.AlarmLessOrEqual(cycletracklist,6) + !System.AlarmLessOrEqual(cycletracklist,3)">$INFO[Window(home).Property(Album.Song.9.Title), [B]9. [/B],][CR]$INFO[Window(home).Property(Album.Song.10.Title), [B]10. [/B],][CR]$INFO[Window(home).Property(Album.Song.11.Title), [B]11. [/B],][CR]$INFO[Window(home).Property(Album.Song.12.Title), [B]12. [/B],]</value>
        <value condition="!IsEmpty(Window(home).Property(Album.Song.5.Title)) + System.AlarmLessOrEqual(cycletracklist,9) + !System.AlarmLessOrEqual(cycletracklist,6)">$INFO[Window(home).Property(Album.Song.5.Title), [B]5. [/B],][CR]$INFO[Window(home).Property(Album.Song.6.Title), [B]6. [/B],][CR]$INFO[Window(home).Property(Album.Song.7.Title), [B]7. [/B],][CR]$INFO[Window(home).Property(Album.Song.8.Title), [B]8. [/B],]</value>
        <value condition="!IsEmpty(Window(home).Property(Album.Song.1.Title)) + System.AlarmLessOrEqual(cycletracklist,12) + !System.AlarmLessOrEqual(cycletracklist,9)">$INFO[Window(home).Property(Album.Song.1.Title), [B]1. [/B],][CR]$INFO[Window(home).Property(Album.Song.2.Title), [B]2. [/B],][CR]$INFO[Window(home).Property(Album.Song.3.Title), [B]3. [/B],][CR]$INFO[Window(home).Property(Album.Song.4.Title), [B]4. [/B],]</value>
        <value condition="IsEmpty(ListItem.Property(Album_Description))">$INFO[Window(home).Property(Album.Song.1.Title), [B]1. [/B],][CR]$INFO[Window(home).Property(Album.Song.2.Title), [B]2. [/B],][CR]$INFO[Window(home).Property(Album.Song.3.Title), [B]3. [/B],][CR]$INFO[Window(home).Property(Album.Song.4.Title), [B]4. [/B],]</value>  
    </variable>
    
    <variable name="MusicTracklistInfoVar">
        <value condition="![[!IsEmpty(Window(home).Property(Album.Song.13.Title)) + System.AlarmLessOrEqual(cycletracklist,3) + !System.AlarmLessOrEqual(cycletracklist,0)] | [!IsEmpty(Window(home).Property(Album.Song.9.Title)) + System.AlarmLessOrEqual(cycletracklist,6) + !System.AlarmLessOrEqual(cycletracklist,3)] | [!IsEmpty(Window(home).Property(Album.Song.5.Title)) + System.AlarmLessOrEqual(cycletracklist,9) + !System.AlarmLessOrEqual(cycletracklist,6)] | [!IsEmpty(Window(home).Property(Album.Song.1.Title)) + System.AlarmLessOrEqual(cycletracklist,12) + !System.AlarmLessOrEqual(cycletracklist,9)]]">$INFO[ListItem.Property(Album_Description)]</value>
    </variable>
    
    <variable name="MusicTracklistAltVar">
        <value condition="!IsEmpty(Window(home).Property(Album.Song.13.Title)) + System.AlarmLessOrEqual(cycletracklist,6) + !System.AlarmLessOrEqual(cycletracklist,3)">$INFO[Window(home).Property(Album.Song.13.Title), [B]13. [/B],][CR]$INFO[Window(home).Property(Album.Song.14.Title), [B]14. [/B],][CR]$INFO[Window(home).Property(Album.Song.15.Title), [B]15. [/B],][CR]$INFO[Window(home).Property(Album.Song.16.Title), [B]16. [/B],]</value>
        <value condition="!IsEmpty(Window(home).Property(Album.Song.9.Title)) + System.AlarmLessOrEqual(cycletracklist,9) + !System.AlarmLessOrEqual(cycletracklist,6)">$INFO[Window(home).Property(Album.Song.9.Title), [B]9. [/B],][CR]$INFO[Window(home).Property(Album.Song.10.Title), [B]10. [/B],][CR]$INFO[Window(home).Property(Album.Song.11.Title), [B]11. [/B],][CR]$INFO[Window(home).Property(Album.Song.12.Title), [B]12. [/B],]</value>
        <value condition="!IsEmpty(Window(home).Property(Album.Song.5.Title)) + System.AlarmLessOrEqual(cycletracklist,12) + !System.AlarmLessOrEqual(cycletracklist,9)">$INFO[Window(home).Property(Album.Song.5.Title), [B]5. [/B],][CR]$INFO[Window(home).Property(Album.Song.6.Title), [B]6. [/B],][CR]$INFO[Window(home).Property(Album.Song.7.Title), [B]7. [/B],][CR]$INFO[Window(home).Property(Album.Song.8.Title), [B]8. [/B],]</value>
        <value condition="IsEmpty(ListItem.Property(Album_Description)) + ![!IsEmpty(Window(home).Property(Album.Song.13.Title)) + System.AlarmLessOrEqual(cycletracklist,3) + !System.AlarmLessOrEqual(cycletracklist,0)] + ![!IsEmpty(Window(home).Property(Album.Song.9.Title)) + System.AlarmLessOrEqual(cycletracklist,6) + !System.AlarmLessOrEqual(cycletracklist,3)] + ![!IsEmpty(Window(home).Property(Album.Song.5.Title)) + System.AlarmLessOrEqual(cycletracklist,9) + !System.AlarmLessOrEqual(cycletracklist,6)] + ![!IsEmpty(Window(home).Property(Album.Song.1.Title)) + System.AlarmLessOrEqual(cycletracklist,12) + !System.AlarmLessOrEqual(cycletracklist,9)]">$INFO[Window(home).Property(Album.Song.5.Title), [B]5. [/B],][CR]$INFO[Window(home).Property(Album.Song.6.Title), [B]6. [/B],][CR]$INFO[Window(home).Property(Album.Song.7.Title), [B]7. [/B],][CR]$INFO[Window(home).Property(Album.Song.8.Title), [B]8. [/B],]</value>
    </variable>
	
	<!-- Banner Stars -->
	<variable name="Mod_Banner_Stars_1">
		<value condition="IntegerGreaterThan(ListItem.Rating,9)">views/list/other/star_fo.png</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,8)">views/list/other/star_half.png</value>
		<value>views/list/other/star_nofo.png</value>
	</variable>
	<variable name="Mod_Banner_Stars_2">
		<value condition="IntegerGreaterThan(ListItem.Rating,7)">views/list/other/star_fo.png</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,6)">views/list/other/star_half.png</value>
		<value>views/list/other/star_nofo.png</value>
	</variable>
	<variable name="Mod_Banner_Stars_3">
		<value condition="IntegerGreaterThan(ListItem.Rating,5)">views/list/other/star_fo.png</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,4)">views/list/other/star_half.png</value>
		<value>views/list/other/star_nofo.png</value>
	</variable>
	<variable name="Mod_Banner_Stars_4">
		<value condition="IntegerGreaterThan(ListItem.Rating,3)">views/list/other/star_fo.png</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,2)">views/list/other/star_half.png</value>
		<value>views/list/other/star_nofo.png</value>
	</variable>
	<variable name="Mod_Banner_Stars_5">
		<value condition="IntegerGreaterThan(ListItem.Rating,1)">views/list/other/star_fo.png</value>
		<value condition="IntegerGreaterThan(ListItem.Rating,0)">views/list/other/star_half.png</value>
		<value>views/list/other/star_nofo.png</value>
	</variable>
	<include name="Mod_Banner_Stars">
		<control type="group">
			<visible>![Container.Content(songs)| Container.Content(albums) | Container.Content(artists)] </visible>
			<control type="image">
				<posx>0</posx>
				<posy>0</posy>
				<width>72</width>
				<height>72</height>
				<texture>$VAR[Mod_Banner_Stars_1]</texture>
			</control>
			<control type="image">
				<posx>40</posx>
				<posy>0</posy>
				<width>72</width>
				<height>72</height>
				<texture>$VAR[Mod_Banner_Stars_2]</texture>
			</control>
			<control type="image">
				<posx>80</posx>
				<posy>0</posy>
				<width>72</width>
				<height>72</height>
				<texture>$VAR[Mod_Banner_Stars_3]</texture>
			</control>
			<control type="image">
				<posx>120</posx>
				<posy>0</posy>
				<width>72</width>
				<height>72</height>
				<texture>$VAR[Mod_Banner_Stars_4]</texture>
			</control>
			<control type="image">
				<posx>160</posx>
				<posy>0</posy>
				<width>72</width>
				<height>72</height>
				<texture>$VAR[Mod_Banner_Stars_5]</texture>
			</control>
		</control>
		<control type="group">
			<visible>[Container.Content(songs)| Container.Content(albums) | Container.Content(artists)] </visible>
			<control type="image">
				<posx>0</posx>
				<posy>0</posy>
				<width>72</width>
				<height>72</height>
				<texture>views/list/other/star_nofo.png</texture>
				<visible>!StringCompare(ListItem.StarRating,rating5.png)</visible>
			</control>
			<control type="image">
				<posx>0</posx>
				<posy>0</posy>
				<width>72</width>
				<height>72</height>
				<texture>views/list/other/star_fo.png</texture>
				<visible>StringCompare(ListItem.StarRating,rating5.png)</visible>
			</control>
			<control type="image">
				<posx>40</posx>
				<posy>0</posy>
				<width>72</width>
				<height>72</height>
				<texture>views/list/other/star_nofo.png</texture>
				<visible>!StringCompare(ListItem.StarRating,rating5.png) + !StringCompare(ListItem.StarRating,rating4.png)</visible>
			</control>
			<control type="image">
				<posx>40</posx>
				<posy>0</posy>
				<width>72</width>
				<height>72</height>
				<texture>views/list/other/star_fo.png</texture>
				<visible>StringCompare(ListItem.StarRating,rating5.png) | StringCompare(ListItem.StarRating,rating4.png)</visible>
			</control>
			<control type="image">
				<posx>80</posx>
				<posy>0</posy>
				<width>72</width>
				<height>72</height>
				<texture>views/list/other/star_nofo.png</texture>
				<visible>![StringCompare(ListItem.StarRating,rating5.png) | StringCompare(ListItem.StarRating,rating4.png) | StringCompare(ListItem.StarRating,rating3.png)]</visible>
			</control>
			<control type="image">
				<posx>80</posx>
				<posy>0</posy>
				<width>72</width>
				<height>72</height>
				<texture>views/list/other/star_fo.png</texture>
				<visible>StringCompare(ListItem.StarRating,rating5.png) | StringCompare(ListItem.StarRating,rating4.png) | StringCompare(ListItem.StarRating,rating3.png)</visible>
			</control>
			<control type="image">
				<posx>120</posx>
				<posy>0</posy>
				<width>72</width>
				<height>72</height>
				<texture>views/list/other/star_nofo.png</texture>
				<visible>![StringCompare(ListItem.StarRating,rating5.png) | StringCompare(ListItem.StarRating,rating4.png) | StringCompare(ListItem.StarRating,rating3.png) | StringCompare(ListItem.StarRating,rating2.png)]</visible>
			</control>
			<control type="image">
				<posx>120</posx>
				<posy>0</posy>
				<width>72</width>
				<height>72</height>
				<texture>views/list/other/star_fo.png</texture>
				<visible>StringCompare(ListItem.StarRating,rating5.png) | StringCompare(ListItem.StarRating,rating4.png) | StringCompare(ListItem.StarRating,rating3.png) | StringCompare(ListItem.StarRating,rating2.png)</visible>
			</control>
			<control type="image">
				<posx>160</posx>
				<posy>0</posy>
				<width>72</width>
				<height>72</height>
				<texture>views/list/other/star_nofo.png</texture>
				<visible>![StringCompare(ListItem.StarRating,rating5.png) | StringCompare(ListItem.StarRating,rating4.png) | StringCompare(ListItem.StarRating,rating3.png) | StringCompare(ListItem.StarRating,rating2.png) | StringCompare(ListItem.StarRating,rating1.png)]</visible>
			</control>
			<control type="image">
				<posx>160</posx>
				<posy>0</posy>
				<width>72</width>
				<height>72</height>
				<texture>views/list/other/star_fo.png</texture>
				<visible>StringCompare(ListItem.StarRating,rating5.png) | StringCompare(ListItem.StarRating,rating4.png) | StringCompare(ListItem.StarRating,rating3.png) | StringCompare(ListItem.StarRating,rating2.png) | StringCompare(ListItem.StarRating,rating1.png)</visible>
			</control>
		</control>
		
	</include>
	
	<variable name="Metadata.Actors.InLibrary">
		<value condition="Container(150).ListItem.Property(LibraryHasMovie)">  †</value>
		<value></value>
	</variable>
	
	<variable name="Addon-Plot">
		<value condition="!IsEmpty(ListItem.Plot)">$INFO[ListItem.Plot]</value>
		<value>$INFO[ListItem.Property(Addon.Description)]</value>
	</variable>
	
	<variable name="Addon-UnderLabel">
		<value condition="!IsEmpty(ListItem.Genre)">$INFO[ListItem.Genre]</value>
		<value>$INFO[ListItem.Property(Addon.Type),, • ]$INFO[ListItem.Property(Addon.Version)]</value>
	</variable>
    
   <!-- New and Watched Labels -->
    <variable name="arctic.watched.image">
        <value condition="[SubString(ListItem.Overlay,OverlayUnwatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[Container.Content(tvshows)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]]">new-w.png</value>
        <value condition="!SubString(ListItem.Overlay,OverlayUnwatched.png)">watched-w.png</value>
    </variable>
    <variable name="arctic.watched">
		<value condition="Container.ListItem.IsResumable + !Skin.HasSetting(HideProgressOverlay)">arctic/overlay/inprogress.png</value>
        <value condition="!SubString(ListItem.Overlay,OverlayUnwatched.png) | [[SubString(ListItem.Overlay,OverlayUnwatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[Container.Content(tvshows)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]]]">arctic/overlay/$VAR[arctic.watched.image]</value>
    </variable>
    <variable name="arctic.watched.bottom">
    	<value condition="Container.ListItem.IsResumable + !Skin.HasSetting(HideProgressOverlay)">arctic/overlay/bottom/inprogress.png</value>
		<value condition="!SubString(ListItem.Overlay,OverlayUnwatched.png) | [[SubString(ListItem.Overlay,OverlayUnwatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[Container.Content(tvshows)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]]]">arctic/overlay/bottom/$VAR[arctic.watched.image]</value>
    </variable>
	<variable name="DefaultListOverlay">
		<value condition="Container.ListItem.IsResumable + !Skin.HasSetting(HideProgressOverlay)">arctic/overlay/list/unwatched-p.png</value>
        <value condition="[SubString(ListItem.Overlay,OverlayUnwatched.png) + ![[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[Container.Content(tvshows)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]]">arctic/overlay/list/unwatched-w.png</value>
		<value condition="!SubString(ListItem.Overlay,OverlayUnwatched.png) | [[SubString(ListItem.Overlay,OverlayUnwatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[Container.Content(tvshows)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]]]">arctic/overlay/list/$VAR[arctic.watched.image]</value>
    </variable>
    <variable name="BannerOverlayNF">
    	<value condition="Container.ListItem.IsResumable + !Skin.HasSetting(HideProgressOverlay)">arctic/overlay/list/unwatched-p.png</value>
        <value condition="[SubString(ListItem.Overlay,OverlayUnwatched.png) + ![[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[Container.Content(tvshows)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]]">arctic/overlay/list/unwatched-w.png</value>
		<value condition="!SubString(ListItem.Overlay,OverlayUnwatched.png) | [[SubString(ListItem.Overlay,OverlayUnwatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[Container.Content(tvshows)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]]]">arctic/overlay/list/$VAR[arctic.watched.image]</value>
    </variable>
    <variable name="BannerList-Indicator">
    	<value condition="[SubString(ListItem.Overlay,OverlayUnwatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[Container.Content(tvshows)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]]">[COLOR=ff00aadd]●[/COLOR]</value>
		<value condition="!Skin.HasSetting(HideProgressOverlay) + Container.ListItem.IsResumable">[COLOR=ff888888]◐[/COLOR]</value>
		<value condition="!SubString(ListItem.Overlay,UnWatched.png) + SubString(ListItem.Overlay,Watched.png)">[COLOR=ff00dd44]‡[/COLOR]</value>
		<value>[COLOR=ff888888]◑[/COLOR]</value>
	</variable>
</includes>